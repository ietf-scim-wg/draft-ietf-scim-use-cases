<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.4.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-scim-use-cases-reloaded-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2025" month="July" day="21"/>

    <area>IETF</area>
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 54?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 58?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
The specifications have two primary goals:
 1. A common representation of a resource object and its attributes.
 2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) <xref target="RFC7832"></xref> and SAML2 WebSSO <xref target="SAML2"></xref>, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:
 * CRUD: Create, Read, Update, Delete
 * ERC: External Resource Creator 
 * IaaS: Infrastructure as a Service
 * IDaaS: Identity as a Service
 * IdM: Identity Manager
 * JIT: Just In Time
 * RC: Resource Creator
 * RU: Resource Updater
 * RM: Resource Manager 
 * RS: Resource Subscriber 
 * SRO: SCIM Resource Object 
 * SROA: SCIM Resource Object Attribute 
 * SaaS: Software as a Service
 * SAML: Security Assertion Markup Language
 * SCIM: System for Cross-domain Identity Management
 * SET: Security Event Token
 * SSO: Single Sign-On</t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +---------+
 |         |                       |  SCIM   | 
 |         |                       | Server  | 
 |  SCIM   | --- SCIM Action --->  |         |
 | Client  |                       | /Users  |
 |         |                       | /Groups |
 |         |                       | /Device |
 +---------+                       +---------+
    Figure 1: SCIM Components  
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="scim-resource-object-sro"><name>SCIM Resource Object (SRO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>. Others SCIM Resource Object (SRO) maybe defined by IETF and register in IANA under SCIM Schema URIs for Data Resources, there is alo the possibility of using the SCIM protocol with private SCIM Resource Object (SRO) that will not even be register in IANA.</t>

</section>
<section anchor="scim-resource-object-attribute-sroa"><name>SCIM Resource Object Attribute (SROA)</name>
<t>A named element of a SCIM Resource Object (SRO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the SCIM Resource Object (SRO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific SCIM Resource Object Attribute (SROA) and/or SCIM Resource Object (SRO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms SCIM Resource Object (SRO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes SCIM Resource Object (SRO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
+-----------------+ +---------------+   +-----------------+ +---------------+
|    Resource     | |               |   |    Resource     | |               |
|  (SRO) Object1  | |(SROA) Resource|   |  (SRO) Object2  | |(SROA) Resource|
|(SROA) Attribute1| |   Attribute1  |   |(SROA) Attribute3| |   Attribute4  |
+-----------------+ +---------------+   +-----------------+ +---------------+
        |                   |                    |                  |
  +-------------+   +-------------+       +-------------+    +-------------+
  |(RC) Resource|   |(RU) Resource|       |(RC) Resource|    |(RU) Resource|
  |  Creators   |   |  Updaters   |       |  Creators   |    |  Updaters   |
  +-------------+   +-------------+       +-------------+    +-------------+
        |                  |                    |                  |
        +------------+-----+--------------------+-----+------------+
                     |                                |
                     v                                v
             +----------------+              +----------------+
             | (RM) Resource  |              | (RM) Resource  |
             |     Manager    |              |     Manager    |
             +----------------+              +----------------+
                      |                               |
             +----------------+              +----------------+
             |                |              |                |
             v                v              v                v
      +-------------+ +-------------+   +-------------+ +-------------+
      |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
      |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
      +-------------+ +-------------+   +-------------+ +-------------+
             |                                                 |
    +---------------------+                     +----------------+
    |                     |                     |                |
    v                     v                     v                v
+--------------+ +--------------+      +--------------+ +--------------+
|(SRO) Resource| |(SRO) Resource|      |(SRO) Resource| |(SRO) Resource|
|   Object1    | |   Object2    |......|    ObjectX   | |   ObjectZ    |
+--------------+ +--------------+      +--------------+ +--------------+
    Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
    Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional SCIM Resource Object Attribute (SROA) of the previously created SCIM Resource Object (SRO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
    Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual SCIM Resource Object (SRO) or SCIM Resource Object Attribute (SROA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server. This SCIM actions is not cover by an RFC yet, and will need to bedetailed in a RFC.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 7:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
 In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         |
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 8:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
 Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
 The Resource Subscriber (RS) will decide which SCIM Resource Object Attribute (SROA) to consider and how the SCIM Resource Object (SRO) will appear in its resource database.
 Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the single-tenant RS.
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 9: Single-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 10: Single-Tenant Resource Subscriber that is the SCIM 
      Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the multi-tenant RS (Resrouce Subscriber).
 A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 11: Multi-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant SCIM Resource Object Attribute (SROA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates SCIM Resource Object (SRO) either in central IdM (Identity Management) system or directly in a target aplications.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 13: Single-Tenant Resource Creator/Updater that is the 
       SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional SCIM Resource Object Attribute (SROA) to the SCIM Resource Object (SRO). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 14: Single-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates SCIM Resource Object (SRO) either in a central IdM (Identity Management) system or directly in target applications.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 15: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional SCIM Resource Object Attribute (SROA) to the SCIM Resource Object (SRO).</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 16: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which SCIM Resource Object Attribute (SROA) to obtain from each source. There might also be independent agreements for different groups of SCIM Resource Object (SRO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the SCIM Resource Object (SRO) or some of their SCIM Resource Object Attribute (SROA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 17: Single-Tenant Resource Manager that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 18: Single-Tenant Resource Manager that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 19: Single-Tenant Resource Manager that is the SCIM Client
      and SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 20: Single-Tenant Resource Manager that is the SCIM Server 
      and SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The SCIM Resource Object (SRO) of the device, provided by the manufacturer, includes its SCIM Resource Object Attribute (SROA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the SCIM Resource Object (SRO) in the customer's device database, it will be the server's responsibility to add and update the SCIM Resource Object Attribute (SROA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the SCIM Resource Object (SRO) to the customer's device management platform.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 21: Manufactor is the SCIM client and push RO to Customers 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the SCIM Resource Object (SRO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the SCIM Resource Object (SRO) from the multi-tenant SCIM server provided by the manufacturer.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 22: Manufactor is the SCIM Server and Customers Pull 
      information about Device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional SCIM Resource Object Attribute (SROA) to be added to the SCIM Resource Object (SRO) that is maintained in the device manager.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | <------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | <---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 23:  Commissioner tool provide Resource Attribtues to 
      Device Manager
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------> | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------> |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 24: Device manager provides RO and RA to the Devices 
      through Commissioner Tool
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | <------> | RA |
|  SCIM  | -------------> |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | <------> | RA |
+--------+                +---------------+          +----+
    Figure 25:  Device Manager provide Resource Attributes to the 
      Commissioner tool to configure device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized SCIM Resource Object Attribute (SROA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific SCIM Resource Object Attribute (SROA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective SCIM Resource Object Attribute (SROA) they are responsible for. They will use the SCIM action of Active Push to pass the RSCIM Resource Object Attribute (SROA) of the SCIM Resource Object (SRO) to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.</t>

<figure><artwork><![CDATA[
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------> ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || <------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
    Figure 26: Single Ro with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific SCIM Resource Object Attribute (SROA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the SCIM Resource Object (SRO). The Active/Delta Pull method will be used to retrieve the specialized SCIM Resource Object Attribute (SROA) that are the responsibility of the application.</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | <------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
    Figure 27: Single RO with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
    Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>
<t>The editor would like to acknowledge the contribution to this draft versions of this document:
      Dean Saxe, Beyond Identity
      Eliot Lear, Cisco Systems</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>
<reference anchor="RFC7832">
  <front>
    <title>Application Bridging for Federated Access Beyond Web (ABFAB) Use Cases</title>
    <author fullname="R. Smith" initials="R." role="editor" surname="Smith"/>
    <date month="May" year="2016"/>
    <abstract>
      <t>Federated identity is typically associated with web-based services at present, but there is growing interest in its application in non-web-based contexts. The goal of this memo is to document a selection of the wide variety of these contexts whose user experience could be improved through the use of technologies based on the Application Bridging for Federated Access Beyond web (ABFAB) architecture and specifications.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7832"/>
  <seriesInfo name="DOI" value="10.17487/RFC7832"/>
</reference>

<reference anchor="SAML2" target="https://www.oasis-open.org/standard/saml/">
  <front>
    
    <author >
      <organization></organization>
    </author>
    <date year="2005" month="March"/>
  </front>
</reference>
<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <author initials="J." surname="Schreiber" fullname="J. Schreiber">
      <organization></organization>
    </author>
    <date year="2025" month="June"/>
  </front>
</reference>


    </references>

</references>


<?line 1009?>



  </back>

<!-- ##markdown-source:
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
7Mk5le/ZNLjsKEH2YqBeXi9Pw1poC7pICziFkKcynbXglIZkTO59A/SV8AMB
+p36rjleRKB5BYE77Kjn2oRjl8s8STa+zy/IhM7Ycw9uyHX+vJ5fB56zLcd4
6+M+Neg9PYnxxcmW36eEsDka43E43u3jo3NK56aP79Ef9+fT9yGGfpt6otjV
RhyROMmIeMDxZeDWDyDKIUnpdZv6Boj9Jmo3yN2HPbSzQwk69NFFQrxAv90r
dDwhsYScr9RgKr0A+QwZBmUSw9AJDXCxyhupBvFx00lC+TG4TM7k7gcT9emQ
9YiPdTnMB3tTcGKOahnWmUZmVNUEh2wH1ruRFztwiga9hlJSeqDTRXn5++AY
6+12vR/viAB54Bj0xUfhGE++/iCW4Un2+7GMxwmdDSrJJdgNNnWGpHakFmQo
SbGFO+kzeNUAmU8ynALRHLNJH2lnhzCJHrK159vUENuKX3vQRz6GPoLLHdUR
7KpWTd7VjdysmyOkw8WyRtL98rkqJz28Zr/v21k096Ngd2nxLWDFnq/T4qkL
6mzXrwNr25tZ3aXF9+ZW3a/3YVd3Kbvam1912nb8ip0d7/T1kSOFZ8d3e3Os
9np/Ervl+cNu2fZ10rbfLc/32y3Pfy+75fxht2z7Omnb75bz/XbL+T3slu1f
pL82H8vF6Sen7yEG3qMBhn2IOOql+Qf7y+dpf/kYAuue8ip5badYzqlTEdr2
q9vPP+xk/7ZcxHGFnSXUYE154CL/hBKq2y07S6gPu+WfWUJ1u2VnCfVht/x+
JNSn7yOh3rudt/f+ucd4H9s4cwClSWIZZlavRRAotmUFSyTAjbfZZbHeIRcP
pYP10L2AyXP3lX9q2K3PA6oVDd3ZNZkhImLtioIVmhuDiX21qMQNr9dc7NWZ
JJK1uU2Syowfjy7bZv4PhWGByElpJFNfp9styepTEGUNORh1gyDN0mk5eIU2
r8tK+BmiJduK11qz/RPcVrvEJ4zb6qz8OmJ0T9itXt1tg+p2j/4QwJ1eJg4I
r1D+xo4Sn3CpnxCH+FTMguidkhvUT6t5iKBNj8YPI3b0Q7OALA2uR313f3rN
c8P43IYFcPmOGibMPKUKpRMb7p3lfdfwfWJu9s8TmOUyQ+/cbaTRvxs3+zdr
3eybyF2Q/O5BCGubB9+X+noj5RojoUt9tyPZa9vRPm0LouuuIyGb7YR7MpVf
2R6YkmS4jfnXxNzCOMLF73hNLzKSJA9INzFILpYAx1hrhE7v8qAs1xWoDJ0b
PSC8VkKAjLsBIku34fEkP4zyGy8gS0S9bvMmF+mkEwq8KCoWEFKgKon5lzG7
U1nun0U9jTtedwn3fePX1h3aDcC2fPY+WX76ecLW/rn56bMP4qcZI/tgm8YW
6Npa5WxfFNuairai2c4SmphCcn8Yeb9Qj3K221g+tm62Pye9V7zaWpr3Sehn
mctujXpWbFfPILEEJKbAvdDVycxxl3fupZPt7vdra2VBJ9tbKQPycniQm1H3
ozfEWTLL+S7UjiWZ5u+ogmg837GCkGHeVRDe7clj+irYi8/ECjyr2XUIntls
H8KaCvIepH66XSoIPAe+uI998LCRfl8b6fneG+n5w0Z62EixB6l3b5cK4kY6
v5eN1P43S2TjP6zz8O0sGt+vpek9RckHQ9PvwNC0Rqg8/iAwGlxb+mBh+q0t
TJ+fJB6B1jtWEC6IeuB7D5I4e9hID5L4w0bqVPCJbKRPURL/4wdL4vdtpGYt
qQJvujoaXUJmswTN4y9xUZDAfGmsFnzhxRgvcRm2VMum8lixtriCtXq5FlMl
JiIZj8nx2pfelOq2dg06S6ZxkhQI4AHCZYQNCeV8P8LNK0PSGuLd8eFiVS97
15C+tpjzpfVp+3l1y1eGqcZWshY+zW0hlpitNkyC71N6jW8N/ffQt5DVdppC
CykWpGdsaT05hs6bbttVobzdSqrUN/f+NgJKPnzv5uc6zgkZdFuKmROmsUql
Wa3qE/h72A6rxjus/dtknqkPQZUoVF2Lwip/T0GaTp8yAMMwZlo1S59w018g
ATcYU+rEKS9cpsQlzLEynSjqlr5XiRkvVu1rnH96cfZqeHjws1v2wfr977ZW
QdsobSq4adx+SdO4ubxxKTwS8hzXcBeAxYts9ktj5y7FwnYxQIc+8Rf20e3j
eGXfBI4j3SyJ0M2ZFpSmkVJuBgysm+eN12+4Q9g/L7BJsEV3c3Ou0/Zgg51O
29Jn2ZFD+cI4MFkp6E90l+AWLRcc4PjBdK/Nn2ZLrBSeVpxHIxA2iv1PUu1h
+RQeLGsGk1pPpajKvZLypfMXUNKxUIYgJHIiPTlp+Vw0eGEuk9zfiTKZwpSb
5ZgOI3CmUBkuWwLunLi7JV9E4oa5SoVXpmPZATuvVINJxueriZZlBx+wBZ3k
+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

-->

</rfc>

