<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.4.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-scim-use-cases-reloaded-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2025" month="July" day="21"/>

    <area>IETF</area>
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 50?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 54?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
The specifications have two primary goals:
 1. A common representation of a resource object and its attributes.
 2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) <xref target="RFC7832"></xref> and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:
 * CRUD: Create, Read, Update, Delete
 * ERC: External Resource Creator 
 * IaaS: Infrastructure as a Service
 * IDaaS: Identity as a Service
 * IdM: Identity Manager
 * JIT: Just In Time
 * RC: Resource Creator
 * RU: Resource Updater
 * RM: Resource Manager 
 * RS: Resource Subscriber 
 * SRO: SCIM Resource Object 
 * SROA: SCIM Resource Object Attribute 
 * SaaS: Software as a Service
 * SAML: Security Assertion Markup Language
 * SCIM: System for Cross-domain Identity Management
 * SET: Security Event Token
 * SSO: Single Sign-On</t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +---------+
 |         |                       |  SCIM   | 
 |         |                       | Server  | 
 |  SCIM   | --- SCIM Action --->  |         |
 | Client  |                       | /Users  |
 |         |                       | /Groups |
 |         |                       | /Device |
 +---------+                       +---------+
    Figure 1: SCIM Components  
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="scim-resource-object-sro"><name>SCIM Resource Object (SRO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>. Others SCIM Resource Object (SRO) maybe defined by IETF and register in IANA under SCIM Schema URIs for Data Resources, there is alo the possibility of using the SCIM protocol with private SCIM Resource Object (SRO) that will not even be register in IANA.</t>

</section>
<section anchor="scim-resource-object-attribute-sroa"><name>SCIM Resource Object Attribute (SROA)</name>
<t>A named element of a SCIM Resource Object (SRO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the SCIM Resource Object (SRO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific SCIM Resource Object Attribute (SROA) and/or SCIM Resource Object (SRO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms SCIM Resource Object (SRO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes SCIM Resource Object (SRO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
+-----------------+ +---------------+   +-----------------+ +---------------+
|    Resource     | |               |   |    Resource     | |               |
|  (SRO) Object1  | |(SROA) Resource|   |  (SRO) Object2  | |(SROA) Resource|
|(SROA) Attribute1| |   Attribute1  |   |(SROA) Attribute3| |   Attribute4  |
+-----------------+ +---------------+   +-----------------+ +---------------+
        |                   |                    |                  |
  +-------------+   +-------------+       +-------------+    +-------------+
  |(RC) Resource|   |(RU) Resource|       |(RC) Resource|    |(RU) Resource|
  |  Creators   |   |  Updaters   |       |  Creators   |    |  Updaters   |
  +-------------+   +-------------+       +-------------+    +-------------+
        |                  |                    |                  |
        +------------+-----+--------------------+-----+------------+
                     |                                |
                     v                                v
             +----------------+              +----------------+
             | (RM) Resource  |              | (RM) Resource  |
             |     Manager    |              |     Manager    |
             +----------------+              +----------------+
                      |                               |
             +----------------+              +----------------+
             |                |              |                |
             v                v              v                v
      +-------------+ +-------------+   +-------------+ +-------------+
      |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
      |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
      +-------------+ +-------------+   +-------------+ +-------------+
             |                                                 |
    +---------------------+                     +----------------+
    |                     |                     |                |
    v                     v                     v                v
+--------------+ +--------------+      +--------------+ +--------------+
|(SRO) Resource| |(SRO) Resource|      |(SRO) Resource| |(SRO) Resource|
|   Object1    | |   Object2    |......|    ObjectX   | |   ObjectZ    |
+--------------+ +--------------+      +--------------+ +--------------+
    Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
    Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional SCIM Resource Object Attribute (SROA) of the previously created SCIM Resource Object (SRO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
    Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual SCIM Resource Object (SRO) or SCIM Resource Object Attribute (SROA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server. This SCIM actions is not cover by an RFC yet, and will need to bedetailed in a RFC.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 7:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
 In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         |
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 8:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
 Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
 The Resource Subscriber (RS) will decide which SCIM Resource Object Attribute (SROA) to consider and how the SCIM Resource Object (SRO) will appear in its resource database.
 Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the single-tenant RS.
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 9: Single-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 10: Single-Tenant Resource Subscriber that is the SCIM 
      Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the multi-tenant RS (Resrouce Subscriber).
 A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 11: Multi-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant SCIM Resource Object Attribute (SROA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates SCIM Resource Object (SRO) either in central IdM (Identity Management) system or directly in a target aplications.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 13: Single-Tenant Resource Creator/Updater that is the 
       SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional SCIM Resource Object Attribute (SROA) to the SCIM Resource Object (SRO). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 14: Single-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates SCIM Resource Object (SRO) either in a central IdM (Identity Management) system or directly in target applications.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 15: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional SCIM Resource Object Attribute (SROA) to the SCIM Resource Object (SRO).</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 16: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which SCIM Resource Object Attribute (SROA) to obtain from each source. There might also be independent agreements for different groups of SCIM Resource Object (SRO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the SCIM Resource Object (SRO) or some of their SCIM Resource Object Attribute (SROA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 17: Single-Tenant Resource Manager that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 18: Single-Tenant Resource Manager that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 19: Single-Tenant Resource Manager that is the SCIM Client
      and SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 20: Single-Tenant Resource Manager that is the SCIM Server 
      and SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The SCIM Resource Object (SRO) of the device, provided by the manufacturer, includes its SCIM Resource Object Attribute (SROA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the SCIM Resource Object (SRO) in the customer's device database, it will be the server's responsibility to add and update the SCIM Resource Object Attribute (SROA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the SCIM Resource Object (SRO) to the customer's device management platform.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 21: Manufactor is the SCIM client and push RO to Customers 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the SCIM Resource Object (SRO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the SCIM Resource Object (SRO) from the multi-tenant SCIM server provided by the manufacturer.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 22: Manufactor is the SCIM Server and Customers Pull 
      information about Device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional SCIM Resource Object Attribute (SROA) to be added to the SCIM Resource Object (SRO) that is maintained in the device manager.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | <------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | <---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 23:  Commissioner tool provide Resource Attribtues to 
      Device Manager
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------> | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------> |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 24: Device manager provides RO and RA to the Devices 
      through Commissioner Tool
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | <------> | RA |
|  SCIM  | -------------> |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | <------> | RA |
+--------+                +---------------+          +----+
    Figure 25:  Device Manager provide Resource Attributes to the 
      Commissioner tool to configure device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized SCIM Resource Object Attribute (SROA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific SCIM Resource Object Attribute (SROA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective SCIM Resource Object Attribute (SROA) they are responsible for. They will use the SCIM action of Active Push to pass the RSCIM Resource Object Attribute (SROA) of the SCIM Resource Object (SRO) to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.</t>

<figure><artwork><![CDATA[
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------> ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || <------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
    Figure 26: Single Ro with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific SCIM Resource Object Attribute (SROA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the SCIM Resource Object (SRO). The Active/Delta Pull method will be used to retrieve the specialized SCIM Resource Object Attribute (SROA) that are the responsibility of the application.</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | <------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
    Figure 27: Single RO with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
    Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>
<t>The editor would like to acknowledge the contribution to this draft versions of this document:
      Dean Saxe, Beyond Identity
      Eliot Lear, Cisco Systems</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>
<reference anchor="RFC7832">
  <front>
    <title>Application Bridging for Federated Access Beyond Web (ABFAB) Use Cases</title>
    <author fullname="R. Smith" initials="R." role="editor" surname="Smith"/>
    <date month="May" year="2016"/>
    <abstract>
      <t>Federated identity is typically associated with web-based services at present, but there is growing interest in its application in non-web-based contexts. The goal of this memo is to document a selection of the wide variety of these contexts whose user experience could be improved through the use of technologies based on the Application Bridging for Federated Access Beyond web (ABFAB) architecture and specifications.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7832"/>
  <seriesInfo name="DOI" value="10.17487/RFC7832"/>
</reference>

<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <author initials="J." surname="Schreiber" fullname="J. Schreiber">
      <organization></organization>
    </author>
    <date year="2025" month="June"/>
  </front>
</reference>


    </references>

</references>


<?line 1005?>



  </back>

<!-- ##markdown-source:
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
hVPW7LsRzKTlXqOA5+jyOFNJaZlhF9YOR2eaErlDk4Ac607ZOfrY0ej15ik3
8CBq5s7k2E1AbhOHMHtYxNEVRA9FNV2/Zt4tW6j656YmBo/Cnxg29kEygxaq
qjC+KJ0u4+YVD/CeE+F1+Vjpjbvds77eXwq7ma0vjXE202LGLXqAmNW8NsDX
NmpfGHsJFlxBJGseN7SRBoj38ej1MUU5+RviYgvGb7isuN/NHq8tvDk+dmpW
UB3aItUMcQ5vOSiaZDX4LSpUU5UoNKMj9YSbE37iheERerOPWVGpJgTFe85h
4kqGMXXXDdAGzUJsXCc8AZ6UWKmEqT+3tF5gKd26p3HlE5sind5tmBE6obtC
ohSVRMHHA7uHbsEOQx7ueiNZCyoQrNhV4pqiHoDLk35PgbWajS4f4zbGxVkf
TTh62WZXOLY5Nz2+w20LhixjtwMBTlJYVtSng3JlwdKlFhwLf0mraYIO6xfD
kB+X5lWtTqa8QB0lN8OdDyS6TaKDpf3dF5l7ZcNzhwfozQlTJD9O28Nz570+
257D5mgRabGe4GNunfzbrrn0uae9zx0e+K/Cmj+hXuO/3ejaz33Veu4Zju6e
126TR6zXS9bzJfjKWm13R+BdaD3ftr6C1u5AbOerDVIt+4axvufaD2JrzB8w
E0nhtWeycU7d59oP3v9M16/qPqvf0+MXyX/b+979KRnL9lGs6T773Gx78ab1
YmekLadr9/dWA3ekZsUD3hp79/dOA/DxUr47+e7v9z2FVlfrP/fec6fD3rlv
GEFnv282/jPZ//Y52X6+1hyjO1R6IjNo/3vrE6Ehlqotd51/b33i3qe2bhe2
ftxQetnAmrDGOlrp73zHb904+rnCjt/edKRfR6R90TuF7mNOLOe00PqCxr3t
MVI/gqrgdYqgEzB2N8QPNkhf/3frsb+5Fbq/2bEYi3rqYlG5A8C5BVxICpRS
7+6H2IT7Ew1UdErI6BuAWHrBIVjB08gtBoaKogHfiH8djHwXz0VleAIGCfis
llohlsD5PDl4ChA7D/FkdG5hsH2AnvOyqcAli2hyFtEOr2v5FlyRcwbHbmmZ
bmrCwSHgQqua/awmA9BLx+Mr9nNj7ImsTyB+6xvjWkv0V4D5xqYBmqdFtfI+
EaeBBzcWoeHEjVSNqVasqQ24YSD00Jo4uhInIsdJUMeDViTAuUuulqK+eMHG
cw6oEECfAOD0W/DxQ4bGMN8X79sLrieMYWzB0CYhDjIOk5isIa9WxFdmgLAc
yQUThAe998abmJZGyBYCfETSUFTPo0YR16B4lQfMyNceraNXQktVyoJh7skN
xwDTGfgJ6Wvpvg6dOYSiOClUPUWiLxmfaUG+l1uMRWTOXxiycxQ77yNYcJ6Q
kRiCQyGJ9yf9qakVQNtFo7XHXkYD1W9J2ioegDBp8vmBUwTDTBAvABRpXHsZ
fLglrLHzQ+buw8x25xsWKFrz7PWPF/8dDgeD4VLsjM5QYqL65A0CSNl+jjDw
KFKD56xWNsGjO+seup4DIpBWtl65JT3LdgS4CqLwww6C25o2BwBNEmI8Kbsh
gAi4tQR5WMOOedbhOQWa0nrFbrW0sGsI4ISNaUppWaVmA3gbTxstZGRGcOzA
8nUxd+h4QAgriiKmDutlxS2ONl2FFriFVsNzBreoHmzVh0lDnNFxLzoTUnt+
osHQObqhILCmZUGXqVXs77ul3PwUtz7FLidCIfs+0AOyfMKI8nIha4kSBrzY
EICtyxMMqiNFTnnhYkALXkvEMomyQ8Z17pnx/ETO5pYoGBtcAAJ/5by2UoNA
wfklTpKBEz3OH50zgASf5OHIABpDDDCyTB+R15+bbnqETUAb4TCS59JPJQ44
QSKexRVKPb0cXVivaaGw6YvyEjDKisnFQpTASqoVu+UOf+FGmHrOda8PMHKk
dU4vmQW5hD5OAizjK3aUIyHBM5V/008ItEcJplwYjHpFCRvh8v6YAvKTPR1+
CVNygvBc1bUo7JBdTDPxzAMqFAW4oBi06xVWDdxl4MhaCdgCUUecPB4fq3xG
gJW1c6jFhcHodbZSjjfF45qwpkytOPr+4vo4A+W3JAcuEgLqIgwlyKd8YZHt
EN80BGKEGUHgA4YX9jsBHEyd+51goI5UESdokryonmXsPylRrcuiT9Q7hMjg
cfCOQlM5jqPXybcOQ5V+1jn3NlkWPZ9+p96v24xDwiXNeLBbXzNHT457m/H4
OofJ6w7nT23jrfX5Zp3HM/KKXWeVspfazwrZ3eXxmlk97Z8VI+7E1q3xLpNK
pNMxNXu/m44u/Mejy/2aGY1bzbz/aO7pXLFoIX516sjTsykyDToweI9fZJhQ
WKOECCommh0mMiAMWaEQdIETVHDvJc44pAztpy3lCvFAIHKctubSPDMeSWMp
nYYOpOuRXjCZ7y+uKQqZwB52HjElnQbD0Pe0YRowCxQPXu2HgU8IQtcPjSId
IwpPtAFRp8u2asAEasPOGHGxeEr3UlOc5tH3TnBBMgkhW5zI8qB2aVwgqKm4
BkvXCMCiOIhWlu0GsjvNqarkQtqInqibBXjF1DRikAKo/PXoh4BbSG1RWpv2
IniEYRrEzKAQJk9QTSANYFmAwLaK1D2PrSlUDWpwtH8jzsEBudvYwAnkES+X
Tvk0uYfEtX4j9CTqNpSPgKkJmKTw4uUPL69fEt4q75Pi5iHCyQ2ERsHckNrh
yTykEvSDdkKkT5fLAGjPKGXVkWNE3nXBFsEma2M0gnlPIfkuJAOpGpX+aQZl
ZROB6GFvu0Tt0gk/h3h51Zg5mhiZko6wnWQ5k2VUmr06uz7/LgnMelxDli8A
Uf7k+KNpn+ntgcaKFgqnWrFHoPhgckHIoHWqowdjuaOS6kuwaIkubLvtE6Og
FO12APhxxHBg5H/oz8EC0N8Ov43BZlnCEEuxrNQKHEvO7ogKvbd0Avq7G0Dm
ANXwyd6jM2dHu4wJOs6I4TQKPQWg6OUgtTZyNUJP18d630Ve9SmC7yQ/++Tw
R9NQoiK2H1qnD/bplS3FckeFMNUsf9E1Wq8Ubmtom1p40h/V8m15XMa+s/M6
3UdJSvd23FjUD5+dZhwOMy2JxM5S9p2ph9do1aJKNhFkQbrsvuht8dl6wMi9
UOwRLl7yOmgioPWp91uH/vXuZe+XcazdK4nX7rsUwksj08I2unaYtcejs47y
txCWE7QxTQ5TDo+GXgdwIg5ZAhdrL01Vofu6I9gCePrPL69RwFG+D4JGnYhH
AFEur/7q8+54UAecj/lGoIE+SDPgcJZTYYt5x1PvhWTul3bdHB60BDS0bDJU
MWgY0jZOJ/JODNdvAE15KC3IlVB5Q5Su5sZElauY0ZaERYJ/lTK8tTMpylJD
9Gii1BvKQPRVcHyyDNYlStJLt4AVd9LtPS2j55tEIWwfzThZ6xhJgLUmhxB6
TGCCUA4BdiA4qUdXfntdIMLF1sCdDJn09YqNrsyQfauCTxHc1As1ATcnXy6p
iI7bJszjcBuNQ2o0pgRVshDgIEeFzllErluX5xYwjR0nYFt678lIcom9Jzu7
+7VfDnmLrc8aOewfx5djDuROAirkPH7AOW+Wse2Xt436m87LwTmy87BJiP6q
+/xetM2iePydd59skI8gBChNl7FERGZSAZl1CHnVUThAZH2CXJRyEVxBMV/9
4v5goEOWC81E1e/Ky9RwgDKAs3eVnllah1uxF6uaL2TB/tIIvfr05CcuXwhP
xsG0nqP2PZSW57NmRy/+ckzlBhIQvEmHZxUzzcTAnNuiOmbIoexxOze6CuN2
uOIb4dLbS3YUa3NpgTmlBXk0SgQPlP5Vkog0K2oXnFC01qWbwT9wBujaoioP
C5DsZgFWpHaJujQdnkxmqorGeGHpQSJkuhZUKZNXIRtfc8rtmkN+TBLOY1MQ
uqBtQEhU+3Cz23hp2BtZl1Q1hoIflGwgIH0WMm2TAgsu+X6QCPuUDB28RVU3
EHjEqnnGirqQiaMx1AxYV6Cgh3RyjwJ64iD2U2BbE/S2j749h+jWwPkCIBEy
lLIrheWyIhWNw5MP4nxPcZ69/G8mzp2BvKdEH43x8fFvQ6L/fpvB2xJP7yzZ
nbgivlWKyvIPINWZkbWrIeHjE+n0hr0if6OxnI/UqQI0ov2UgVQHYMtGL5VJ
SwG8oEpOIxFj8VBxAMs5UIQi4qtC9QyQNhgK98iEkGpH4DusPWF92Z40V70D
YdHC1duZyyUzS074wqgCeM8Er3wtlyGlwhuC8EFpIUIaxlBp0F1QTMEQ2A3X
MtSQcbmVHigYZXLwQS/5Cqo9R7+2kxkCwi51iMKhQCBgBPQ8AcsYNSSryVsS
9waaBTJ4RAt+8hwTvJNlf+TncfTi+eg4gx8mZn2SyeZktJd5QcClSbShNA4P
ju18+WlNe6RX53Bvj4lmlVoC19jqduvyoPiNEw8oWt6/Icdg+hpK9fAdRpR+
mwi4NSM6+ip9IjNk/be53OtpqCtPwmjvbbFJKoHLNszt6ba59beEQ/J+3/WS
cMeGNs4NxCK5mPsb6lrB70tI93ZGWBSHX+cGromprh65mJg0GID3aQuYBbsA
2CWVMMEHCVrq3MFrWXzmTU4iw0PG8vD/yJlZ4Yevhg7ZiPUBgducqiWT5enb
1T+jl1adXGGhDRhaGv6GNlBACJMLAKyD41p+1UygZKWDOYxEISB1dGesZSIO
QjJ9i3d6huu9nEmBJeTW6BgkLJbr3FLhCvwSi4T4YCw8T1YtDSIMN9hmmFkM
44HaHiQmglnSnrCrroiSBNtx8MVCLVdpj+xIDGfDQfD6Y2OJzoOhzYsaAcEb
FzXdg4HzgEQNKWbJh/6ENsdR6FeyfgN2GKCgVdhxaUIxQieEWhgJ7kQ3mwqo
kELB0Muz/yEMKlrdoXqXVWCXui/igFTNhEQbFaqpt125afsRoO2RE4DyxEJn
BGekqpCuMqPbHdAxXInfVKXyIjcoJNfKVx4nrafgy1Ct+RH0/qgFnc7rtGCG
QYkgTvKbOLXB1QhaqBuCTbd2w/kDoH1UMB9E+IMIfwcJfvSs54k9JXh3anlD
G6f225Dgf/iAEnytJN0gw99HgDPGniWtBfd6KNIb7s7xdqJHQnkYkiEsojM6
8J2k9p54i2WpYWqA4HHOP/ifK2pPVx1APWwtYvGXIq09LOobqVW9IHsTs6oq
KxfAQzH/iYo7OkOIzRpZYvkj0BhKKKUKlqXB7BMXCHdj9Vd7JGNEuTUHvypa
XL5ApKs6KesbcE8iD34uKG3Pl/FKqro7/+atCpX6omLShQ0llWmyQqaDvIyh
H6VfsKxUYRghVU8iOB85tElWGSx/R5V6sd5lXmzd1cpJ1rynEOYwL4UUi5AB
fi9K0uRGAUX9+jqPOIM62OZY6t5b/1NXt8b0ZbN1cungwgasmYblmBHHOQC0
okbXBzpL3IzpeaqtVIYfbYIBw9VQdfCURIrHVemWf/LghLVVWRiGWNb+6jQ9
k4VVQPbjNQI+WQp/hPKZIiJIOUMXfAJcc7PMTl3Hwb7e7wUBpx1r/CSoR3Sa
O/As5HTS7rSBnSqq/Z7APbw5aEihODVU5oR4gfWKUXpOwuFJsan+aA0S9b+V
EEgXPgQMRlZqsr0p6JQrRQEchNTT3daFal/jBT8pO9u08NhVLOoPexDvpXEF
YHC8sdrTrWBTiV7BJOISYKEAHllgLouCa4VODIJCssLZ8dKiGETCVFtZM1Wf
LLVYSEpSBQQknbmYu4Rw6JNrUXM0eNbVIlq7uIRYIVC1pVZCMTan1E9EZ/c8
pMQjkPL1MELQctAdGHESabJRmMMuk/ApXK3UUDCs8Ht37Kwq+SqkB+X5p4ES
kxAampXIN8C7e8mO2hWwjgdsdJ587cCrrtDk6HXyk8OzHg/SpKn+g5cVVsIY
8zhpKE77OAExJwA08DDPVel4D/ci3xV1ukd3ure/aHscdYzGQ+ShM6XKnppT
Oc2myWVHCbIXE/Xydnma1kIk6DIt4BRCncp01UJQGooxud8b4K+EHwjQ7zR2
zfEiAs0rSNxhRz3XJhy7WuZJsfF9PkEndM6eewhDrovn9Xw68JxtNcZbL/eZ
Qe8YSYw/nGz5fEwIm6MxHofj3V4+Oqdybvr4HuNxfzx9F2boydQzxa414pjE
ScbEA44vA7e+B1MORUqv29w3QOw3cbtBHj7s4Z0dTtDhjy4T4gXG7V5h4AmZ
JdR8pQ5T7QXYZ6gwKJMchk5qgMtV3sg1SI6bThHKDyFlciF3P5ioj4etR3ys
q2E+2JuDk3BUy7DPNDOjqiYEZDuw3o2y2IFTNNg1VJLSA50uysvfhsRY77fr
fXlHBMiDxKA3PojEePLle4kMz7LfTWQ8TvhsMEkuwW+waTCktSO3IEdJii3c
yZ7BqwbIfZLhFIjnmE32SLs6hEnskK0j32aG2Fb+2oM98iHsEdzuaI7gULVq
8qFulGbdGiEdKZZ1ktLLp2qc9Mia/d5vV9Hcj4PdpY9vASv2vJ0+noagznZ9
O4i2vYXVXfr43tKq+/Y+4uouFVd7y6tO305esbPjnd4+cqzw7Phub4nV3u+P
glqeP1DLtreTvj21PN+PWp7/Vqjl/IFatr2d9O2p5Xw/ajm/B2rZ/kb6acux
XJ1+cvoOauA9OmDY+6ijXpt/8L98mv6XD6Gw7qmvUtR2is85cypC235x//n7
nexfV4o4qbCzhhq8KQ9S5N9QQ3XUsrOG+kAt/84aqqOWnTXUB2r57WioT99F
Q713P2/v/XOP8T62cRYASovEMqysXougUGyrCpZogBtvs8tyvUMtHioH66F7
AZPn7iv/2LBbnwZUKzq6s2syQ0bE2h0FLzQ3Bgv7alGJG16vudirs0ika3Ob
FJUZPx5dtt387wvDApWTykimsU5HLcnuUxJlDTUYdYMgzdJZOXiFNq/LSvgV
oi3bitdaQ/4Jbqv9xEeM2+rs/DpmdE/YrV7bbYPpdo/xEMCdXiYBCG9Q/sqB
El9wqZ8Rh/xUrILog5IbzE+recigTY/GdyN29F2zgCoNbkR9d396y3PD/BzB
Arh8RwsTVp5KhdKJDffO8r5r+D6yMPunCcxylaF3Hjby6N9MmP2rtWH2Tewu
aH73oIS13YPvyn29k3KNk9CVvtuR7bX9aB+3B9EN17GQzX7CPYXKL+wPTFky
3Mb8S2JuYR7h4ne8phcFSVIHpFsYJFdLQGKsdUKnd3lQlesKTIbOjR6QXish
QcbdAJGV2/B4ku9G+Y0XUCWiXke8yUU66YKCLIqGBaQUqEpi/WWs7lSW+1dR
T/OO113Cfd/4tXWHdgOwLV+9j1aefpqwtX9vefrsveRpJsje26exBbq21jjb
F8W2pqGtaLazhCemkNzvRj4u1GOc7TaXD22b7S9J7xWvtpbnfRT2WRayW2Oe
FdvNMygsAYUpkBa6Npk57srOvWyy3eN+bass2GR7G2XAXg4PcjfqfvyGJEvm
Od+F27Gk0vwdNRCd5zs2ECrMuwbCb3vKmL4G9pIzsQEvanadghc226ewpoF8
BGmcbpcGgsyBN+6DDh4I6bdFSM/3JqTnD4T0QEhxBGl0b5cGIiGd3wshtf/N
Et34d+sifDurxvfraXpHVfLB0fQbcDStUSqP3wuMBteWPniYfm0P06eniUeg
9Y4NhAuiHuTegybOHgjpQRN/IKROAx8JIX2Mmvjv31sTv28nNWtpFXjT1dHo
EiqbJWgef4mLggLmS2O14AuvxniNy7ClWjaVx4q11RVs1eu1WCoxUcl4LI7X
vvSmVLe169B5Mo3TpEABDxAuI2woKOfHEW5eGZLVEO+ODxeret27hvK1xZwv
rS/bz6tbvjJMNbaStfBlbguxxGq1YRH8mNJrfGsYv4e+haq20xRaSLkgPXNL
28kxdN51224K9e1WUaW+tfe3EVDx4Xt3P9dxTcih2zLMnDKNTSrNalWfwN/D
dlo13mHtf03WmcYQTIlC1bUorPL3FKTl9KkCMExjplWz9AU3/QUScIMxlU6c
8sJVSlzCGivTyaJu2XuVmPFi1b7G+YcXZ6+Ghwc/um0frKd/R1oFkVHaVQjT
OHpJy7i5unEpPBLqHNdwF4DFi2z2K2PnLsXCfjFBh17xF/bR7eN4Zd8EjiPd
LInQzZkWVKaRSm4GDKxb543Xb7hD2L8uQCTYo7u5Obdpe7DBzqZt2bPsyKF8
YR5YrBTsJ7pLcIuVCwFwfGG6F/Gn1RIrhacV19EIhI3i+JNSe/h8Cg+WNYNF
radSVOVeRfnS9Qso6fhQhiAkdiI9O2nFXDREYS6T2t+JMZnClJvlmA4jSKbQ
GG5bAu6cuLslX0TmhrVKhTem47MDdl6pBouMz1cTLcsOPmALOsmPf6OzqM2r
nbPHFZFNRVvCq+/RH8IupqkXJ9407R1Y0lnqgC/ujyG628RkuPCyJST7GI7n
vx6/3lqbcImWlytE+cADWzNyNVkNX/ScXsfQLN0+mriwgmcpEXK+q7VDy9UW
72HjsV5sS48xc+QqHnePF9dDmWCQJHjtGS4QXrkCUXE43+AccSBsCkQnFL7y
rLG9AsQrHfePCg8JhSCsolhIPE6bKKlfvUk9Sp36MrT9/tIyd4U7UWPb/dXZ
xq1plD0Zk6/9mV+j8abKrn8ATj691Y/wSHTsL3rV7U7F+jacJzG2+u2u5Pd+
jGxibfUbXvGlDryGTKm7CKK5u4uXYudjCH/lyYjegkpMlH7TJ2vDfdYs6vqm
qM49fonZT2uANzihrvF2F0cbv3OgoR9V3dmWHafT3liqaX/3H+GJ/9itBf+v
uKTBolszhvh7ti1J1h8+fDZ4foyJW+73vx23R/G34/VruReJs57P+lOW25Rf
r0U+bRWO71XYkQrR/+gLwdObvgz9+8Cm9hf2aZ2Cj1bYj11gZ6uozoVpCHJ1
FYTHnVhTduNtriXsKcPHW2V4vEHTh81sdjssXF1PWXl08S7ZCPd8Q59TfcKY
3KY/KAUPSsEOSkEH6JuAIfpxEYnS8KAUPCgFH61S8If9lYJ7S+m+L9VgtwLS
W5Qcyjb+2JQEJ568PxqSZYN859klsz2iPkAFAhde4wAIFj5KfX8nL7wtrX8n
cuVBEPbRTR5dP7KWKETHbbXG5M6EqQRMQQipdAmsPXezffLkCPm4pp3ksm+Z
dkh1f9BIHjSS99VIHtwUDxrJp6mRrL+KYqtGQh0FQX6PIfAP4sP4N2Vd2zys
D8bUA+v6JFnX0/VXImwzPjq86x6A9B/EvFoDS8pDzJufyQEr2yLMBcZ9J1gH
K8BlSmHkjO5D5YZdvOB83Bt+huVMosvQnkOXJGFopV1w2V2ytzn7YKuvfAzG
RHalp3lXqvAB8igL3E2cgGMPOBBq1WzNm9gqPu9j5I6EfqGRrzPd73EPWm2/
08zY2IPPLjJDznhs3SuubS0gJwSdDCMxk8bq1eHBWQ22n9IWxmysWAIMZMHf
kL+cLinCW2xbF94CEKgUlssqyQ5f8LqZciwcpoNDvDFWLbAk1xbUi7t4Hrsc
+I7QDG23PWCyLqqmdOU8dvJ0xBSFQmgLawV5wgO25ATfC6YowZ3optFQzs1N
NSJhLtOp+oUIYwZD080bxn8j6lL1UECROIKytfM3rqTJJmlKSAx4gD/Cd4/4
HoIl8gITPMiI97Thh2Tc3ngnETlOHLYijDtzRLWSguIAPIivN4MkjMINa8jO
QraHB6fl/dHFv/Sy30AT4SDh0izEZnUT8nsKRsKtOoN16KwMuJWKmCE7mxL6
NXpeqC5jvEZ4Ay07KKef2+f+uq/gbYhIG4c5oXX9vA9dh1kydckaHPr6rvt8
exE3G8+W3zish91YykByPy3cGnQnUAsLbCCLD66jDlGXSyXr4ONKadvVILDc
vIlQu4mg6pnwICG5iAdaGWBwfoRIU0ZSShKvKnVLrIr8SXActm9PizXF7Yn3
TrNlxS2Q9ENaf/r5xaD7kD24xxqAbfaazLNfKZnIs7HfUjLRAyFtmkJ/A60R
vEMykbG/uWSiB0LaNIX+BlojeIdkIkdIHzyZ6ClcLeNEvNI9Gi5Fd0A2j65A
+J4HRfRervTdooxPVpilIwwWoZKW9NPAsO9BK3dqD2WAq6o0TmEJankWHLzy
eTcusZ4yvIMupRI9/XauvBKN2eKbVPQsizxJuvaYKJ4EMWMaQiduF3R2X2rX
Ww+ZEpfUPnAdYl9zfrMuYWK9Sp5nZW3IpZiIgmNoFlXzrEz6Zl0cM/LzFLFM
AW+XMUBNm/J0SrZQpZyuqCPuU2V8EDXW4TZM4FKh+oopPY7gsKR7uqNGeDPc
z3zDBbzQUC3skF3UZMBCb4bU+VYrPdi59PitgcZV1Q5rGC38dbS/yVz/BFXo
30L260cisB7y8R8Iad0U+htojeAhH/+BkH7r+fhPn65VoZMwQdSb3YU11E8W
h5iAS480g/dQrmNWvlMyQhTt3HtBSYtWi4U0INGFZtdKVYcHf4WE+uCH1sF/
Wq1iJVCvXqIXzukoedWliaxEXn7oVkzyL4QthseDdW24zPlK3QZYXSxECpnd
se6QV9Rp7aKv0cQgYdCC0XWI+QzG8qry6aF/nVNOKaUA+DVBzUqpCrF2lRa8
XOG6n4ga1DzMNl0z/BDg6G8Rp609XLGycsGtqFauslWy0UnJWZ6hGPNasB13
7ruUZZrgaxT+2OaBdUYXKIGAH4zlD3JHdFQdW8pu6+MvzV4uwzddygznr1Pg
uR1/xwcIpPCFZ+K9fMV9kSrb7I79KXLB0ZnH0xFABd9IGO6d68D/L2k99uyx
Kb5h92F3roP4v72G3e65b9hrXu5dsPaw173cv29fwJa1dmynNrLxUMcOndN6
qC3n4PfRWUCXAKpn3Fnk1ofd5Vij3YZ3lyAj11PhhjmxRFR8ddqibmQx/vCG
80Yn1DYCw31eVuTHaLuEKDbUUWRsDQIEfyHxETc4AnJnUCCFqikrvULqRm5L
ToUeZqiF1VLcQLi3I+qgpEKQNgH8ngQPg6BpcRAnFSSEq26kVjXVOmBrxhAB
JQBArhR3Xp4pSOJKGpuGX0su4cFGe7QzhM7g77lqNHh+pJ1jqbxlvHyoFAu8
oG1VF8N07Q0zcyw1ghUIgceChwCCdkUhjOnKK4RlE/98YJ8Z+8wG+c0nzz4/
Rua5yTT45iNgns9OPR/woe5Q+2l0Rc7Hs5CaITxfojbtXKtmNu87G+/MRqtq
Jzb6ynH3cy1KAdo0MnWHlvDa/nWXyaWe5ZZkQOboI+FdfmdU4CaBvbj6SYWq
p7icZVJ7tqujDtm3cO02FVPq9VimoytgZnWYWqIKJn10h8mJAc64Fbcc693Q
Hq1Tm7NCUOGeQV8mii6kTIfinnQVT6JuS2P7aPlrxiLbx2kTf11zYHsuook9
++PZPbg9/95DLLBwR27/sPdcsHzYLGEKvzttK0a7HBrPFrq6GNbxcmfEUcqH
17ReQqhgqQFw+ugHbiy7lJV4lGlezjjPLq61imFVOTVlEzhpoFIkTaWZVIOY
JoZVzaA809Sitc8xioBqjVFTe4sQXHdrJ4Q2oOoaN6AUYThFwqWwZxCm0MI0
FRUeWnBUb2oBag3Xq9R2dfWmIa4y02lel25qDxZK2ULFV77CQUjwct85m3uq
+UIgsBG/x8tRdUm4RVkbofFOUXexLJRxw4ZcFqZzX+BGyHqqebgwdQipd74c
HK0OhqwC76JdXWIIDv06MEepSllQ1OiGI/28EWLZmRVc9orqId1hg9ApV7yL
tFlp2JJbCBnRNNCHwDj7uTH2RNYniKcaj6/8TbuDwOadjsnxvhWcrqUdSLTM
Dp2kY5uIqdL57bCIWJ3Ahby+LJkLDoUZJ6sxIL01LWIGPhbBCTZd+htyClVb
1IpdABPG+rlh47PLHwAVCNhOd9UxVnYkEVmymXKxuFuucRzhELn+zTAepdEZ
442dKw0OL1lTTmFykA4PxmohYDHNACN3eAHvrrg8qiu4KYcXDtYt+ESO3FIc
+5Xrrz8HxeT7QqZD9v+gvpuLS+LNwLuNMKlg370MmXdyLFuSnteUM0ok5TIu
kaa0KJQujWMUWKBcl6mxhkUMp1Iby2q+EANW8fDnHJJReVlqYQx5/wYBLN0e
ke+8FFNfMlMsuKxiX0xOifI7r0qsYk6PG58y65AGFykDbEcz+5Nys+xkUtIS
NgrYQ3qZY/S9i3TH4ov0dSRKOO5azJqKZ7auhzjvsYK4obA5vlZg0lx6GCMC
NRzj9vy9djVtalcmzU1nTai/l5g3IAAc6qC1V92FybLmveN2T5B4QjG0XrRQ
M3lDHN3jWBeC16bDqNGdijt+z0vg+DxgCOIl6QlQuq5Ww8OD58rOe3coZIl3
Buv3DMY78a+3yTBVBcN1Dwh7sGsLuXYdxZ7Nt1AXSH+rvLpQqumEknukEvlb
13Fxd+a7OwGDpWaFalAH4pqgHo0ZxGUJ4JZNaRziLfiEgNE5x/Yue7E94Xzt
JxNPnb62fiJ+tYPJ2Pp5bwxH/vz+AdP8+f0hh3l8df9waf78vtHSb/re70kx
3TJ/ZyptH/+699eOf//333f/PwL62SfentPbvdPPxoAExiR63/f0sNP4E3r7
9Onn/RhY7hv4vU+5ZSNFemspXanp3EwIOl0ZPAMTYW/B/NnI/gOa01sZ9wSK
3U9V/bCK6eBBM33QTEEzvajJS+FxswPwwBai/4SgiwOvPugjvY5zpPt0Wuiy
p5K1h/9itaOoz3asqq16IwUN15bCzPqxKoQzKfFvb+M8gFL6zfN7UinfR59c
o0zux4k3X5++BrPmn27VAdkiQL9hqcDf9xby9OmN75Lre+O7UQzvIPVZFPLv
N+b32SOWyMqvo6y8+jRkJTnV37W+Dt1aA3exyEo6r/ThwXOXpqCm4IGFw2ms
qAsJnESzhTSWv0EoQ/RcwUy6mRh060bCiOg6DOeTdmuiBaUPMFixnAuEy/ck
XEy4XAq8pHpMrnRkSqVCl1wcP0UV3whmGu/B3+SoxBHumIBPMtsvB3jCtTIm
ubnD1ZgDKTGNMyOPdBvPkVrebiHj1gw6+Ud+spyykKxiU/kWFxcSPGC+fMad
d91d3fLANu+Tbe7A+pIfdmN9ybsJ22z1+1V/v/1sc5f5Jv3eF9v8w2mLi2Di
1NXj0VngihcvLpFWM/LKON/I6S2/JAekOj8jsRClG/g72CpsLIoGxQLArWXp
77o9PDhrIIRjQ6gfnOkkQ/5J3ywaQ6HF2iAaAXQ47DO5MdcqNmu45rUVjqHR
Ta6xbVFS/F86hIOPOWJLLnPQY8tcqNF961W2pDtgcn6QogR2S6346q1HYjgb
DtjrcC/Un/G+Igq5QGwL2ZCoocJBXlbD3YkEUbYBxSIxxuyQCrB+7eXwRRQ0
rw2UeKFIJ9kqwIspyLPU8gaKdEpjGg8hE2+tqOFyq5WCaYcGjNuqaI0s1A1W
TxHaUFUPRiOaSnefcMTrHb26uAAn7NTMwf7xpB0FAC6VIM3AeIpGiKC7r5bu
LfLTXAgLJZlqEIua8vWkR6mn/XY7+rnR0pTSmYJuS9Dlq6WDERrLUeLyFSU1
0stUKIbWiwwFbAIvGs4qm7iHTuJO4o75yflYt1pIawkHriamwF2T7hThqof7
ZjQzVsHPPoRGtXgsSFpCreQdwFHw1jME5xCvXkNhHY7+6xMKqvrNEtopF95M
8bFXsC0h8FzKG1k2vIJKIHwBwJcXiJoXZSAKEu5ldhScKeimJYgxfJ1ZVL7w
Dvv76Nvzr3//7NlP5Et3D/8xe9gUc7Hg/tGvfqLIHLs4+/Gswz6IyukWvBTP
jg+3xoqO/8R2FWXsA4cTBud6PCve1Oq2EiWVC6HumCglmMp0NRzGMjGCHh4N
EWxUZsKNSdKwUvOpheu4jL9fiL5WRQPtn0b8Lod49FsxYM/pdPrMDP/Ey0oq
y34QXA/YuTSFYqTxYS0oEJ4TXrw5PPj/4aoZqhspAQA=

-->

</rfc>

