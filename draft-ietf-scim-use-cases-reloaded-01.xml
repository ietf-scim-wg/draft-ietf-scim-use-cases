<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.4.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-scim-use-cases-reloaded-01" category="info" submissionType="IETF">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2025" month="July" day="21"/>

    
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 42?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 46?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
The specifications have two primary goals:
 1. A common representation of a resource object and its attributes.
 2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) <xref target="RFC7832"></xref> and SAML2 WebSSO <xref target="SAML2"></xref>, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:
 * CRUD: Create, Read, Update, Delete
 * ERC: External Resource Creator 
 * IaaS: Infrastructure as a Service
 * IDaaS: Identity as a Service
 * IdM: Identity Manager
 * JIT: Just In Time
 * RC: Resource Creator
 * RU: Resource Updater
 * RM: Resource Manager 
 * RS: Resource Subscriber 
 * SRO: SCIM Resource Object 
 * SROA: SCIM Resource Object Attribute 
 * SaaS: Software as a Service
 * SAML: Security Assertion Markup Language
 * SCIM: System for Cross-domain Identity Management
 * SET: Security Event Token
 * SSO: Single Sign-On</t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +---------+
 |         |                       |  SCIM   | 
 |         |                       | Server  | 
 |  SCIM   | --- SCIM Action --->  |         |
 | Client  |                       | /Users  |
 |         |                       | /Groups |
 |         |                       | /Device |
 +---------+                       +---------+
    Figure 1: SCIM Components  
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="scim-resource-object-sro"><name>SCIM Resource Object (SRO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>. Others SCIM Resource Object (SRO) maybe defined by IETF and register in IANA under SCIM Schema URIs for Data Resources, there is alo the possibility of using the SCIM protocol with private SCIM Resource Object (SRO) that will not even be register in IANA.</t>

</section>
<section anchor="scim-resource-object-attribute-sroa"><name>SCIM Resource Object Attribute (SROA)</name>
<t>A named element of a SCIM Resource Object (SRO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the SCIM Resource Object (SRO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific SCIM Resource Object Attribute (SROA) and/or SCIM Resource Object (SRO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms SCIM Resource Object (SRO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes SCIM Resource Object (SRO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
+-----------------+ +---------------+   +-----------------+ +---------------+
|    Resource     | |               |   |    Resource     | |               |
|  (SRO) Object1  | |(SROA) Resource|   |  (SRO) Object2  | |(SROA) Resource|
|(SROA) Attribute1| |   Attribute1  |   |(SROA) Attribute3| |   Attribute4  |
+-----------------+ +---------------+   +-----------------+ +---------------+
        |                   |                    |                  |
  +-------------+   +-------------+       +-------------+    +-------------+
  |(RC) Resource|   |(RU) Resource|       |(RC) Resource|    |(RU) Resource|
  |  Creators   |   |  Updaters   |       |  Creators   |    |  Updaters   |
  +-------------+   +-------------+       +-------------+    +-------------+
        |                  |                    |                  |
        +------------+-----+--------------------+-----+------------+
                     |                                |
                     v                                v
             +----------------+              +----------------+
             | (RM) Resource  |              | (RM) Resource  |
             |     Manager    |              |     Manager    |
             +----------------+              +----------------+
                      |                               |
             +----------------+              +----------------+
             |                |              |                |
             v                v              v                v
      +-------------+ +-------------+   +-------------+ +-------------+
      |(RS) Resource| |(RS) Resource|   |(RS) Resource| |(RS) Resource|
      |  Subscriber | |  Subscriber |   |  Subscriber | |  Subscriber |
      +-------------+ +-------------+   +-------------+ +-------------+
             |                                                 |
    +---------------------+                     +----------------+
    |                     |                     |                |
    v                     v                     v                v
+--------------+ +--------------+      +--------------+ +--------------+
|(SRO) Resource| |(SRO) Resource|      |(SRO) Resource| |(SRO) Resource|
|   Object1    | |   Object2    |......|    ObjectX   | |   ObjectZ    |
+--------------+ +--------------+      +--------------+ +--------------+
    Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
    Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional SCIM Resource Object Attribute (SROA) of the previously created SCIM Resource Object (SRO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
    Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual SCIM Resource Object (SRO) or SCIM Resource Object Attribute (SROA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server. This SCIM actions is not cover by an RFC yet, and will need to bedetailed in a RFC.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 7:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
 In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         |
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 8:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
 Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
 The Resource Subscriber (RS) will decide which SCIM Resource Object Attribute (SROA) to consider and how the SCIM Resource Object (SRO) will appear in its resource database.
 Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the single-tenant RS.
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 9: Single-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 10: Single-Tenant Resource Subscriber that is the SCIM 
      Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the multi-tenant RS (Resrouce Subscriber).
 A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 11: Multi-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant SCIM Resource Object Attribute (SROA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates SCIM Resource Object (SRO) either in central IdM (Identity Management) system or directly in a target aplications.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 13: Single-Tenant Resource Creator/Updater that is the 
       SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional SCIM Resource Object Attribute (SROA) to the SCIM Resource Object (SRO). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 14: Single-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates SCIM Resource Object (SRO) either in a central IdM (Identity Management) system or directly in target applications.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 15: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional SCIM Resource Object Attribute (SROA) to the SCIM Resource Object (SRO).</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 16: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which SCIM Resource Object Attribute (SROA) to obtain from each source. There might also be independent agreements for different groups of SCIM Resource Object (SRO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the SCIM Resource Object (SRO) or some of their SCIM Resource Object Attribute (SROA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 17: Single-Tenant Resource Manager that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 18: Single-Tenant Resource Manager that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 19: Single-Tenant Resource Manager that is the SCIM Client
      and SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 20: Single-Tenant Resource Manager that is the SCIM Server 
      and SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The SCIM Resource Object (SRO) of the device, provided by the manufacturer, includes its SCIM Resource Object Attribute (SROA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the SCIM Resource Object (SRO) in the customer's device database, it will be the server's responsibility to add and update the SCIM Resource Object Attribute (SROA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the SCIM Resource Object (SRO) to the customer's device management platform.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 21: Manufactor is the SCIM client and push RO to Customers 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the SCIM Resource Object (SRO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the SCIM Resource Object (SRO) from the multi-tenant SCIM server provided by the manufacturer.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 22: Manufactor is the SCIM Server and Customers Pull 
      information about Device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional SCIM Resource Object Attribute (SROA) to be added to the SCIM Resource Object (SRO) that is maintained in the device manager.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | <------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | <---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 23:  Commissioner tool provide Resource Attribtues to 
      Device Manager
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------> | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------> |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 24: Device manager provides RO and RA to the Devices 
      through Commissioner Tool
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | <------> | RA |
|  SCIM  | -------------> |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | <------> | RA |
+--------+                +---------------+          +----+
    Figure 25:  Device Manager provide Resource Attributes to the 
      Commissioner tool to configure device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized SCIM Resource Object Attribute (SROA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific SCIM Resource Object Attribute (SROA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective SCIM Resource Object Attribute (SROA) they are responsible for. They will use the SCIM action of Active Push to pass the RSCIM Resource Object Attribute (SROA) of the SCIM Resource Object (SRO) to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.</t>

<figure><artwork><![CDATA[
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------> ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || <------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
    Figure 26: Single Ro with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific SCIM Resource Object Attribute (SROA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the SCIM Resource Object (SRO). The Active/Delta Pull method will be used to retrieve the specialized SCIM Resource Object Attribute (SROA) that are the responsibility of the application.</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | <------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
    Figure 27: Single RO with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
    Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>
<t>The editor would like to acknowledge the contribution to this draft versions of this document:
      Dean Saxe, Beyond Identity
      Eliot Lear, Cisco Systems</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>
<reference anchor="RFC7832">
  <front>
    <title>Application Bridging for Federated Access Beyond Web (ABFAB) Use Cases</title>
    <author fullname="R. Smith" initials="R." role="editor" surname="Smith"/>
    <date month="May" year="2016"/>
    <abstract>
      <t>Federated identity is typically associated with web-based services at present, but there is growing interest in its application in non-web-based contexts. The goal of this memo is to document a selection of the wide variety of these contexts whose user experience could be improved through the use of technologies based on the Application Bridging for Federated Access Beyond web (ABFAB) architecture and specifications.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7832"/>
  <seriesInfo name="DOI" value="10.17487/RFC7832"/>
</reference>

<reference anchor="SAML2" target="https://www.oasis-open.org/standard/saml/">
  <front>
    
    <author >
      <organization></organization>
    </author>
    <date year="2005" month="March"/>
  </front>
</reference>
<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <author initials="J." surname="Schreiber" fullname="J. Schreiber">
      <organization></organization>
    </author>
    <date year="2025" month="June"/>
  </front>
</reference>


    </references>

</references>


<?line 997?>



  </back>

<!-- ##markdown-source:
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
8wwVTlmzH8Ywk5Z7jQKf46vTTCWlZYZd2DgcnWlK5A5NAnOsO2Xn6GMn49fb
p9zAg6iZO5NjPwG5SxzC7GERx9cQRRTVbPOaebdsoeq/NzUxeBT+xLCxD5IZ
tFBVhXFG6XQZN694gA+cCK/Lx0pv3e2e9fX+UtjNbH1pjPO5FnNu0QPErOa1
Ab62VfvC2Euw4AoiWfO4oY00QLyPx69PKdrJ3xAXWzJ+y2XF/W72eG3hzcmp
U7OC6tAWqWaIc3jLQdEkq8FvUaGaqkShGR2pZ9yc8TMvDE/Qm33Kiko1ITje
cw4TVzKMqbtugDpolmLrOuEJ8KTESiVM/aWl9QJL6c49jSuf2BTp9O7CjNAJ
3RUSpagkCj4e2D10C3YY8nDXG8laUIFgxa4T1xT1AFye9HsKrNVsfPUYtzEu
zuZowsnLNrvCsS246fEd7lowZBn7HQhwksKyoj4dlCsLli614Fj4S1pNE3RY
vxiG/Lg0r2p9NuMF6ii5Ge58INFtEh0s7e++ytwrW547PkJvTpgi+XHaHp53
3uuz6zlsjhaRFusJPubWyb/tmkufe9r73PGR/yqs+RPqNf7bja793Det557h
6O557bZ5xHq9ZD1fgq+s1XZ3BN6F1vNt6yto7R2I7Xy1Qapl3zDW91z7QWyN
+QNmIim89kw2zqn7XPvB+5/p5lU9ZPV7evwq+W9737s/JWPZPYoN3Wef210v
3rZe7Iy05XTt/t5q4B2pWfGAt8be/b3TAHy8lO9Ovvv7fU+h1dXmz7333Omw
d+5bRtDZ79ut/0z2v31Odp+vDcfoHSo9kRm0/73zidAQS9WWd51/73zi3qe2
aRd2ftxQetnAhrDGJlrp73zPb904+rnCnt/edqRfR6R91TuF7mNOLOe00PqC
xr3rMVI/gqrgdYqgEzD2bogfbJC+/o/WY//lVuj+ZsdiLOqpi0XlDgDnFnAh
KVBKvbsfYhPuTzRQ0Skho28AYukFh2AFTyO3GBgqigZ8I/51MPJdPBeV4SkY
JOCzWmmFWALn8+TgKUCkPsST0bmFwfYBes7LpgKXLKLKWUQ7vK7lW3BFLhgc
u5VluqkJB4eAC61q9nc1HYBeCgi6vzfGnsn6DOK3vjGutUR/BZhvbBYgelpU
a+8TcRp4cGMRGk7cStWYas2a2oAbBkIPrYmjK3EqcpwEdTxoRQKcuwSw+5cv
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
0Dmth9pyDn4fjwK6BFA9k84itz7sXY412m947xJk5GYq3DInloiKb85b1I0s
xh/ecN7ohNpGYLjPy4r8GO2WEMWWOoqMbUCA4C8kPuIGR0DuHAqkUDVlpddI
3chtyanQwwy1sFqKWwj3dkQdlFQI0iaA35PgYRA0LQ7ipIKEcNWt1KqmWgds
wxgioAQAyJXizsszA0lcSWPT8GvJJTzYaI92htAZ/L1QjQbPj7QLLJW3ipcP
lWKJF7St62KYrr1hZoGlRrACIfBY8BBA0K4ohDFdeYWwbOKfD+wzY5/ZIL/7
7Nnnp8g8t5kG330CzPPZuecDPtQdaj+Nr8n5OAqpGcLzJWrTLrRq5ou+s/He
bLSq9mKjrxx3v9CiFKBNI1N3aAmv7d90mVzqWW5JBmSOPhLe5XdGBW4S2Iur
n1SoeobLWSa1Z7s66pB9D9duUzGlXo9lOroCZlaHqSWqYNJHd5icGOCcW3HH
sd4N7dEmtTkrBBXuGfRlouhCynQo7klX8STqtjS2T5a/ZiyyfZy28dcNB7bn
IprYsz+e3YPb8+8DxAILd+T2D/vABcuHzRKm8IfztmK0z6HxbKGri2EdL3dG
HKV8fE3rJYQKVhoAp49+4sayK1mJR5nm5Yzz7OJaqxhWlVMzNoWTBipF0lSa
STWIaWJY1QzKM80sWvscowio1hg1s3cIwXW3dkJoA6qucQNKEYZTJFwKO4Iw
hRamqajw0JKjelMLUGu4Xqe2q6s3DXGVuU7zunRTe7BQyhYqvvYVDkKCl/vO
2dwzzZcCgY34PV6OqkvCLcraCI13irqLZaGMGzbksjCd+wI3QtYzzcOFqUNI
vfPl4Gh1MGQVeBft6gpDcOjXgTlKVcqCoka3HOnnjRCrzqzgsldUD+kOG4RO
ueJdpM1Kw1bcQsiIpoE+BMbZ3xtjz2R9hniqyeTa37Q7CGze6Zgc71vB6Vra
gUTL7NBJOrapmCmd3w6LiNUpXMjry5K54FCYcbIaA9Jb0yJm4GMRnGDTpb8h
p1C1Ra3YBTBhrF8aNhld/QSoQMB2uquOsbIjiciSzZWLxd1xjeMIh8j1b4bx
KI1HjDd2oTQ4vGRNOYXJQTo+mqilgMU0A4zc4QW8++LyqK7gthxeOFh34BM5
cUtx6leuv/4cFJPvC5kO2f+F+m4uLok3A+83wqSCffcyZN7JsWxJel5TziiR
lMu4RJrSolC6NI5RYIFyXabGGhYxnEltLKv5UgxYxcOfC0hG5WWphTHk/RsE
sHR7RL7zUsx8yUyx5LKKfTE5I8rvvCqxijk9bnzKrEMaXKYMsB3N7E/KzbKT
SUlL2ChgD+lljtH3LtIdiy/S15Eo4bhrMW8qntm6HuJ8wArihsLm+FqBSXPp
YYwI1HCM2/P32tWsqV2ZNDedDaH+XmLeggBwqIPWXnUXJsua947bA0HiCcXQ
etFCzeUtcXSPY10KXpsOo0Z3Ku74PS+B4/OAIYiXpCdA6bpaD4+Pniu76N2h
kCXeGazfMxjv1L/eJsNUFQzXPSDswW4s5Np1FHs230JdIP2t8+pCqaYTSu6R
SuRvXcfF3Zvv7gUMlpoVqkEdiGuCejRmEJclgFu2pXGIt+ATAkbnHNv77MXu
hPONn0w8dfra+Yn41Q4mY+fngzEc+fOHB0zz5w+HHObx1cPDpfnzh0ZLv+t7
vyfFdMf8nam0e/yb3t84/sPf/9D9/wTo55B4e05v904/WwMSGJPofd/Tw17j
T+jt86efD2NguW/gjz7llo0V6a2ldKWmczMh6HRl8AxMhb0D82cr+w9oTm9l
3BMo9jBV9eMqpoMHzfRBMwXN9LImL4XHzQ7AA1uI/hOCLg68+qCP9DrOke7T
aaHLnkrWHv6L1Y6iPtuxqnbqjRQ03FgKM+vHqhDOpMS/g43zAErpN8/vSaX8
EH1ygzJ5GCfefn36Bsyaf7pVB2SHAP2OpQL/0FvI06e3vkuu763vRjG8h9Rn
Uch/2Jg/ZI9YIiu/jbLy+vOQleRUf9/6OnRrDdzFIivpvNLHR89dmoKagQcW
Dqexoi4kcBLNltJY/gahDNFzBTPpZmLQrRsJI6LrMJxP2q2JFpQ+wGDFci4Q
Lt+TcDHhaiXwkuoJudKRKZUKXXJx/BRVfCOYabwHf5ujEke4ZwI+yWy/HOAJ
18qY5OYOV2MOpMQszow80m08R2p5u4WMWzPo5B/5yXLKQrKKzeRbXFxI8ID5
8jl33nV3dcsD27xPtrkH60t+2I/1Je8mbLPV7zf9/fazzX3mm/R7X2zzT+ct
LoKJU9ePx6PAFS9fXCGtZuSVcb6x01t+TQ5IdX7GYilKN/D3sFXYRBQNigWA
W8vS33V7fDRqIIRjQ6gfnOkkQ/5B3ywbQ6HF2iAaAXQ47DO5MdcqNm+45rUV
jqHRTa6xbVFS/F86hIOPOWJLLnPQY8tcqNF961W2pDtgcn6QogR2S6346q0n
YjgfDtjrcC/UX/C+Igq5QGwL2ZCoocJBXlbD3YkEUbYBxSIxxuyQCrB+7eXw
RRQ0rw2UeKFIJ9kqwIspyLPS8haKdEpjGg8hE2+tqOFyq7WCaYcGjNuqaI0s
1S1WTxHaUFUPRiOaSXefcMTrnby6vAQn7MwswP7xpB0FAC6VIM3AeIpGiKC7
r5buLfLTXAoLJZlqEIua8vWkR6mn/XY7+nujpSmlMwXdlqDLV0sHIzSWo8Tl
a0pqpJepUAytFxkK2AReNJxVNnEPncWdxB3zk/OxbrWU1hIOXE1Ngbsm3SnC
VQ/3zWhmrIKffQiNavFYkLSEWsk7gKPgrWcIziFevYbCOhz912cUVPWbJbRT
LryZ4mOvYFtC4LmUt7JseAWVQPgSgC8vEDUvykAUJNzL7Cg4U9BNSxBj+Daz
qHzhHfa38fcX3/7x2bNfyJfuHv5z9rApFmLJ/aPf/EKROXY5+nnUYR9E5XQL
Xopnx4dbY0XHf2K7ijL2gcMJg3M9joo3tbqrREnlQqg7JkoJpjJdDYexTIyg
h0dDBBuVmXBjkjSs1Hxm4Tou4+8Xoq9V0UD75xG/yyEe/VYM2HM6nT4zwz/x
spLKsp8E1wN2IU2hGGl8WAsKhOeUF2+Oj/4/a7SrdBQpAQA=

-->

</rfc>

