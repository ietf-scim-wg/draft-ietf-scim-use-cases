<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.4.4) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-scim-use-cases-reloaded-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="SCIM Use Cases">System for Cross-domain Identity Management: Definitions, Overview, Concepts, and Requirements</title>

    <author initials="P. J." surname="Correia" fullname="Paulo Jorge Correia">
      <organization>Cisco Systems</organization>
      <address>
        <email>paucorre@cisco.com</email>
      </address>
    </author>
    <author initials="P." surname="Dingle" fullname="Pamela Dingle">
      <organization>Microsoft Corporation</organization>
      <address>
        <email>pamela.dingle@microsoft.com</email>
      </address>
    </author>

    <date year="2025" month="July" day="21"/>

    <area>IETF</area>
    <workgroup>SCIM</workgroup>
    <keyword>Internet-Draft</keyword> <keyword>SCIM</keyword>

    <abstract>


<?line 50?>

<t>This document provides definitions, overview and selected use cases of the System for Cross-domain Identity Management (SCIM).  It lays out the system's concepts, models, and flows, and it includes use cases, and implementation considerations.</t>



    </abstract>



  </front>

  <middle>


<?line 54?>

<section anchor="introduction"><name>Introduction</name>
<t>The System for Cross-domain Identity Management (SCIM) family of specifications <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref> is designed to manage resources used in the practice of identity management that need to be communicated across internet domains and services, with users and groups as the default resources supported (and an extensibility model for additional resource definitions).
The specifications have two primary goals:
 1. A common representation of a resource object and its attributes.
 2. Standardized patterns for how those resources can be operated on, including "CRUD" operations (Create, Read, Update, Delete) for resource objects and more advanced goals such as search filters, synchronization of large resource populations, etc.
These goals are codified as a data model in <xref target="RFC7643"></xref>, which defines resources, attributes, and default schemas, as well as a protocol definition built on HTTP in <xref target="RFC7644"></xref>. By standardizing the data model and protocol for resource management, entire ecosystems can achieve better interoperability, security, and scalability.</t>

<t>This document provides definitions, overviews, concepts, flows, and use cases that implementers may need to understand the design and applicability of the SCIM schema <xref target="RFC7643"></xref> and SCIM protocol <xref target="RFC7644"></xref>. Unlike some protocols like Application Bridging for Federated Access Beyond Web (ABFAB) <xref target="RFC7832"></xref> and SAML2 WebSSO, SCIM provides provisioning and de-provisioning of resources in a separate context from authentication. While SCIM is a protocol that standardizes the movement of data only between two parties in an HTTP client-server model, this document discusses implementation patterns that use concepts beyond the core schema and protocol, which are necessary to understand how SCIM actions can fit into larger architectures.</t>

</section>
<section anchor="terminology"><name>Terminology</name>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"></xref> when they appear in ALL CAPS. These words may also appear in this document in lowercase as plain English words, absent their normative meanings. Here is a list of acronyms and abbreviations used in this document:
 * CRUD: Create, Read, Update, Delete
 * ERC: External Resource Creator 
 * IaaS: Infrastructure as a Service
 * IDaaS: Identity as a Service
 * IdM: Identity Manager
 * JIT: Just In Time
 * RC: Resource Creator
 * RU: Resource Updater
 * RM: Resource Manager 
 * RS: Resource Subscriber 
 * SRO: SCIM Resource Object 
 * SROA: SCIM Resource Object Attribute 
 * SaaS: Software as a Service
 * SAML: Security Assertion Markup Language
 * SCIM: System for Cross-domain Identity Management
 * SET: Security Event Token
 * SSO: Single Sign-On</t>

</section>
<section anchor="scim-components-and-architecture"><name>SCIM Components and Architecture</name>
<t>The SCIM architecture is a client-server model centered on a normative concept of a "resource." Resources have types (such as a user or a group), and each unique instance of a resource type is represented by a JSON object, accessed via a standardized REST API. Each resource object can be managed individually or in bulk using actions that by default are specified in <eref target="HTTP GET, PUT, POST, etc.">RFC9110</eref>, but may also expand to concepts in extension documents, such as security event tokens (SETs). This model enables organizations to represent information about user populations and the groups those user populations are part of using the core specifications, and to extend to other important resources using extension drafts in the same family, with the high-level concept of performing SCIM actions on resource objects. SCIM actions result in resource objects and associated data "moving" between the client and server, as clients actively push and pull information that reflects changes over time. This communication of data enables systems within domains and across domains to operate on the freshest possible version of object state.</t>

<figure><artwork><![CDATA[
 +---------+                       +---------+
 |         |                       |  SCIM   | 
 |         |                       | Server  | 
 |  SCIM   | --- SCIM Action --->  |         |
 | Client  |                       | /Users  |
 |         |                       | /Groups |
 |         |                       | /Device |
 +---------+                       +---------+
    Figure 1: SCIM Components  
]]></artwork></figure>

<t>The intent of the SCIM specification is to reduce the cost and complexity of resource management operations by providing common schemas and an extension model, as well as binding documents to offer patterns for exchanging this schema using standard protocols. In essence, it aims to make it fast, cheap, and easy to move resources into, out of, and around applications.
 The SCIM scenarios are overviews of user stories designed to help clarify the intended scope of the SCIM effort.</t>

<section anchor="implementation-concepts"><name>Implementation Concepts</name>
<t>To understand the use cases, we need to familiarize ourselves with five different concepts of the SCIM protocol: Data Models, Protocol Roles, Orchestrator Roles, Triggers, and Actions.</t>

<section anchor="data-models"><name>Data Models</name>
<t>SCIM defines two types of data entities: Resources and Attributes.</t>

<section anchor="scim-resource-object-sro"><name>SCIM Resource Object (SRO)</name>
<t>A JSON object representing a user, group (or extension object like devices) used by the CRUD operations through the SCIM protocol. The Resource Object contains attributes defined by schemas such as those defined in <xref target="RFC7643"></xref> and can be implemented via the endpoints and parameters defined in <xref target="RFC7644"></xref>. Others SCIM Resource Object (SRO) maybe defined by IETF and register in IANA under SCIM Schema URIs for Data Resources, there is alo the possibility of using the SCIM protocol with private SCIM Resource Object (SRO) that will not even be register in IANA.</t>

</section>
<section anchor="scim-resource-object-attribute-sroa"><name>SCIM Resource Object Attribute (SROA)</name>
<t>A named element of a SCIM Resource Object (SRO). Attributes are defined in section 2 of <xref target="RFC7643"></xref> and include characteristics like cardinality (single or multiple values), data types (string, boolean, binary, etc.), and characteristics (required, unique, etc.).</t>

</section>
</section>
<section anchor="protocol-roles"><name>Protocol Roles</name>
<t>SCIM is based on the HTTP protocol; HTTP client and server roles are defined in <xref target="RFC9110"></xref> and <xref target="RFC9112"></xref>. Any SCIM interaction requires one participant to be a SCIM server and the other to be a SCIM client.</t>

<section anchor="scim-server-also-known-as-a-scim-service-provider"><name>SCIM Server (also known as a SCIM Service Provider)</name>
<t>An HTTP web application that provides identity information via the SCIM protocol. A SCIM Server is a RESTful API endpoint offering access to a data model that can be used to push or pull data between two parties. SCIM servers have additional responsibilities such as API security, managing client identifiers and keys, as well as performance management such as API throttling.</t>

</section>
<section anchor="scim-client"><name>SCIM Client</name>
<t>A website or application that uses the SCIM protocol to manage identity data maintained by the service provider. The client can initiate SCIM HTTP requests to a target SCIM Server. A SCIM Client is active software that can push or pull data between two parties.</t>

</section>
</section>
<section anchor="orchestrator-roles"><name>Orchestrator Roles</name>
<t>Orchestrators are the operating parties that take part in a SCIM protocol exchange and ensure data is moving in the correct flows. 
An entity can have one or more orchestrator roles, depending on the overall architecture.</t>

<section anchor="resource-creator-rc"><name>Resource Creator (RC)</name>
<t>An entity responsible for creating the SCIM Resource Object (SRO). Typically, this role is found in HR or Resource Management (RM) applications that are responsible for creating resources and their attributes.</t>

</section>
<section anchor="resource-updater-ru"><name>Resource Updater (RU)</name>
<t>An entity responsible for updating specific SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO) or the RO itself. Typically, this role is used in conjunction with other SCIM roles that allow this SCIM entity to manage specific SCIM Resource Object Attribute (SROA) and/or SCIM Resource Object (SRO).</t>

</section>
<section anchor="resource-manager-rm"><name>Resource Manager (RM)</name>
<t>An entity that aggregates or transforms SCIM Resource Object (SRO) from resource creators/updaters (RC/RU) and makes them available for Resource Subscribers (RS) using multiple SCIM interactions. An example of this role could be an Identity-as-a-Service (IDaaS) cloud service.</t>

</section>
<section anchor="resource-subscriber-rs"><name>Resource Subscriber (RS)</name>
<t>An entity that consumes SCIM Resource Object (SRO) and typically doesn't create new Objects or Attributes. An example would be a SaaS application that delivers a service and needs to create a database of Objects and would get those from an RM/RC/RU.</t>

</section>
<section anchor="external-resource-creator-erc"><name>External Resource Creator (ERC)</name>
<t>An entity that has information about SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) but does not participate in SCIM flows. Examples include databases or internally-facing applications.</t>

<figure><artwork><![CDATA[
+----------------+ +--------------+ +----------------+ +--------------+
|    Resource    | |              | |    Resource    | |              |
|  (SRO)Object1  | |(SROA)Resource| |  (SRO)Object2  | |(SROA)Resource|
|(SROA)Attribute1| |  Attribute2  | |(SROA)Attribute3| |  Attribute4  |
+----------------+ +--------------+ +----------------+ +--------------+
        |                 |                 |                  |
 +-------------+   +-------------+   +-------------+    +-------------+
 |(RC) Resource|   |(RU) Resource|   |(RC) Resource|    |(RU) Resource|
 |  Creators   |   |  Updaters   |   |  Creators   |    |  Updaters   |
 +-------------+   +-------------+   +-------------+    +-------------+
        |                  |                 |                  |
        +------------+-----+-----------------+-----+------------+
                     |                                |
                     v                                v
             +----------------+              +----------------+
             | (RM) Resource  |              | (RM) Resource  |
             |     Manager    |              |     Manager    |
             +----------------+              +----------------+
                      |                               |
             +----------------+              +----------------+
             |                |              |                |
             v                v              v                v
      +-------------+ +-------------+ +-------------+ +-------------+
      |(RS) Resource| |(RS) Resource| |(RS) Resource| |(RS) Resource|
      |  Subscriber | |  Subscriber | |  Subscriber | |  Subscriber |
      +-------------+ +-------------+ +-------------+ +-------------+
             |                                               |
    +---------------------+                 +----------------+
    |                     |                 |                |
    v                     v                 v                v
+--------------+ +--------------+    +--------------+ +--------------+
|(SRO) Resource| |(SRO) Resource|    |(SRO) Resource| |(SRO) Resource|
|   Object1    | |   Object2    |....|    ObjectX   | |   ObjectZ    |
+--------------+ +--------------+    +--------------+ +--------------+
    Figure 2: SCIM Orchestrators Roles
]]></artwork></figure>

</section>
</section>
<section anchor="triggers"><name>Triggers</name>
<t>Triggers are activities that may cause a SCIM action to occur. Triggers can result from business processes like a corporate hiring event, scheduled events such as a Unix bash script running as a cron job, or SSO just-in-time events arriving at a federated relying party that identifies a previously unseen user. Triggers can also be standardized events, such as those in the OpenID Shared Signals Framework. Triggers are used to initiate CRUD (Create, Read, Update, Delete) operations using SCIM Actions. The use cases described in this document can use one or multiple trigger mechanisms to achieve the goal of the SCIM element.</t>

<section anchor="periodic-intervals"><name>Periodic Intervals</name>
<t>A periodic interval trigger is a pre-configured agreement where a SCIM client or server performs an action at a specific time. This trigger is often recurring and typically initiates an action from the SCIM Client, though in some use cases it can be done by the SCIM Server. An example of a periodic interval trigger could be a UNIX cron job calling a script.</t>

</section>
<section anchor="events"><name>Events</name>
<t>Event triggers are activities, contexts, or notifications that could happen at any time. A SCIM client may be configured to perform a given SCIM action in response to a specific event, such as an entry written into an audit log, a signal of a corporate workflow completion, or a device management platform notification. SCIM actions could also be triggered by a Security Event Token (SET) as described in <xref target="RFC8417"></xref> or a SCIM event corresponding to <xref target="SCIM Profile for Security Event Tokens"></xref>.</t>

</section>
<section anchor="application-triggers"><name>Application Triggers</name>
<t>Application triggers occur when administrative or end-user interfaces are manipulated. An example of an application trigger might be a user modifying their profile information, resulting in a SCIM client performing an HTTP POST to update the user's resource object at the SCIM server. Another example might be an Identity Administrator creating a new User in the IdM, who immediately wants to update one or more resource Subscribers (typically a SaaS application that is a SCIM Server).</t>

</section>
<section anchor="sso-single-sign-on"><name>SSO (Single Sign-On)</name>
<t>Single Sign-On triggers occur when a user authenticates via federated protocols such as SAML 2.0 or OpenID Connect. If a federated assertion arrives for a user who has not yet been provisioned into the destination application, the application may be triggered to perform just-in-time (JIT) provisioning. This trigger occurs in scenarios where a Single Sign-On flow happens, but not all the resource attributes for the user object are passed in the federated assertion, resulting in a SCIM action to push or pull the remaining needed attributes.</t>

<figure><artwork><![CDATA[
+---------------+                                   +---------------+
|               |                                   |               |
|               |                                   |               |
|               |                                   |     SCIM      |
|    Client     |                (1)                |    Server     | 
|               | <-------------------------------> |               |
|  (typically   |                                   | (typically an |
|   an IdM)     |                (2)                |      SaaS     |
|               | <-------------------------------> | Application)  |   
|               |                                   |               |
|    RC/RU/RM   |                                   |      RS       |
|               |                                   |               |
+---------------+                                   +---------------+
    Figure 3:  SCIM trigger using  Single Sign-On
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>An SSO trigger creates the user and might create some SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO).</t>
  <t>SCIM actions will then complement the attributes created initially through SSO JIT with additional SCIM Resource Object Attribute (SROA) of the previously created SCIM Resource Object (SRO).
  This use case combines the SCIM protocol with other protocols used for Single Sign-On, especially in the context of JIT (Just-in-Time Provisioning). This is particularly useful with protocols like SAML, which are limited by the number of characters in the URL.</t>
</list></t>

</section>
</section>
<section anchor="scim-actions"><name>SCIM Actions</name>
<t>The SCIM protocol defines interactions between two standardized parties that conform to HTTP RESTful conventions. The protocol enables CRUD operations by mapping these activities to HTTP verbs such as POST, PUT, GET, DELETE, etc. The protocol itself doesn't assume a direction of data flow, and use cases discussed in section 4 are created using the orchestrator roles. A SCIM entity can have multiple roles depending on the objective of the use case being described.</t>

<section anchor="client-active-push"><name>Client active Push</name>
<t>A SCIM client uses HTTP verbs POST, PUT, or PATCH to create or update objects and/or attributes at a SCIM server. The SCIM client is actively "pushing" the data to the endpoint. This SCIM action can occur when the SCIM client is the primary Resource Creator/Updater (RC/RU).
  The most common and widely deployed example is a SCIM client providing information about a RO and its RA to a server, which is also called a SCIM Server in <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

<figure><artwork><![CDATA[
+----------------+                                   +----------------+
|                |                                   |                |
|                |                                   |                |
|                |                                   |                |
|      SCIM      |                (1)                |      SCIM      |
|     Client     |  -------------------------------> |     Server     |
|                |                                   |                |
|                |                (2)                |                |
|                | <-------------------------------- |                |   
|     RM/RC/RU   |                                   |        RS      |
|                |                                   |                |
|                |                                   |                |
+----------------+                                   +----------------+
    Figure 4: SCIM action for Client Active Push
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>There will be push using a HTTP POST, PUT, PATCH, DELETE depending on the operation that the Client want to achieve at the Server.</t>
  <t>The Service Provider will return the RO/RA with additional metadata information to allow for audit.</t>
</list></t>

</section>
<section anchor="client-active-pull"><name>Client Active Pull</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server.
 Client active pulls can be used in situations where a client needs to maintain a synchronized large body of objects, such as a device list or user address book, without the need to track individual SCIM Resource Object (SRO) or SCIM Resource Object Attribute (SROA). There are also cases where the client performs a one-time pull of only one specific RO from a server that manages many ROs. For example, a mobile app (SCIM Client) may fetch the current license entitlement from a Device Manager (SCIM Server).</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |   SCIM   |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 5:  SCIM action for Client Active Pull
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET to obtain the selected list of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).</t>
  <t>The SCIM Server will return the RO and its RA along with additional metadata information to allow for auditing.</t>
</list></t>

</section>
<section anchor="active-dynamic-query"><name>Active Dynamic Query</name>
<t>A SCIM client uses the HTTP GET verb to request data from a SCIM server. With the action of an active pull, the client will fetch one or multiple objects from the SCIM server. The response data from the SCIM server will include a Dynamic Query (DQ) token that allows the client to subsequent active pulls that will only return RO objects that have changed (including references to deleted objects). The data returned from a dynamic query is usually much smaller, and allows a client to focus only on processing incremental changes rather than performing a full sync every time. With this kind of action, SCIM reconciliations are possible, where the SCIM client can resolve inconsistencies created over time between the client and the SCIM server. This SCIM actions is not cover by an RFC yet, and will need to bedetailed in a RFC.</t>

<figure><artwork><![CDATA[
+----------+                                   +----------+
|          |                                   |          |
|          |                                   |          |
|          |                                   |          |
|   SCIM   |                (1)                |          |
|  Server  | <-------------------------------- |  Client  |
|          |                                   |          |
|          |                (2)                |          |
|          | --------------------------------> |          |   
| RC/RU/RM |                                   | RS/RU/RS |
|          |                                   |          |
|          |                                   |          |
+----------+                                   +----------+
    Figure 6: SCIM action for Client Active Dynamic Query
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>The SCIM client will perform an HTTP GET requesting a delta list of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) since the previous SCIM action.</t>
  <t>The SCIM Service Provider will return the delta list of RO and their RA along with additional metadata information for auditing purposes.</t>
</list></t>

</section>
<section anchor="domain-replication-mode"><name>Domain Replication Mode</name>
<t>This is an action specifically for triggers that are events. In this mode, there is an administrative relationship spanning multiple operational domains. Data shared in events typically uses the full mode variation of change events, including the data payload attribute. This eliminates the need for a callback to retrieve additional data.
 "Domain-Based Replication" events (DBR) are used to synchronize resource changes between SCIM service providers within a common administrative domain.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         | 
| RM/RC  |     (2)        |               |                 |         |
|  /RU   | -------------> |               |                 |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 7:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Domain Replication Mode
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
</list></t>

</section>
<section anchor="co-ordinated-provisioning"><name>Co-Ordinated Provisioning</name>
<t>In these relationships, an Event Publisher and Receiver <xref target="SCIM Profile for Security Event Tokens"></xref> typically exchange resource change events without exchanging data. For the receiver to know the value of the data, the Event Receiver usually makes calls back to the SCIM Event Publisher domain to receive a new copy of the data (e.g., using a SCIM GET request).
 In any Event Publisher and Receiver relationship, the set of SCIM resources (e.g., users) that are linked or coordinated is managed within the context of an event feed, which MAY be a subset of the total set of resources on either side. For example, an event feed could be limited to users who have consented to the sharing of information between domains. To support this capability, "feed" specific events are defined to indicate the addition and removal of SCIM resources from a feed.</t>

<figure><artwork><![CDATA[
+--------+                +---------------+                 +---------+
|        |                |               |                 |         |
|  SCIM  |                |               |                 |         |
| Client |                |  SCIM Server  |                 |         |
|        |     (1)        |               |      (3)        |  SCIM   |
|        | <------------- |               | --------------> | Server  |
|        |                |               |                 |         |
| RM/RC  |     (2)        |               |      (4)        |         |
|  /RU   | -------------> |               | --------------> |         |
|        |                |     RS/RC/RU  |                 |   RS    |
|        |                |               |                 |         |
+--------+                +---------------+                 +---------+
    Figure 8:  SCIM actions aggregated by a SCIM server then 
      transmitted via SCIM Events using Co-Ordinated Provisioning
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM Action.</t>
  <t>SCIM Response.</t>
  <t>Event SCIM:prov:op id:xyz</t>
  <t>SCIM Active Pull</t>
</list></t>

</section>
</section>
</section>
</section>
<section anchor="scim-use-cases"><name>SCIM Use Cases</name>
<t>This section describes some common SCIM use cases, explaining when, where, why, and how they are found in cross-domain environments. The ultimate goal is to provide guidance for developers working on common models, explaining the challenges and components involved.
 Because SCIM is a protocol where two entities exchange information about resources across domains, the use cases explain how the different components can interact to support simple to complex architectures for cross-domain resource management. Orchestrator roles are mapped to the use cases to simplify the explanation of the multiple functions of the SCIM elements. The use cases build on each other, starting with simple cases and ending with the most complex ones.</t>

<section anchor="use-cases-for-orchestrator-roles"><name>Use Cases for Orchestrator Roles</name>

<section anchor="resource-subscriber-rs-1"><name>Resource Subscriber (RS)</name>
<t>A Resource Subscriber (RS) receives data from a remote corporate data store. This is a very common and simple SCIM use case, where the SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are created by another party. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
 The Resource Subscriber (RS) will decide which SCIM Resource Object Attribute (SROA) to consider and how the SCIM Resource Object (SRO) will appear in its resource database.
 Typically, we find this kind of use case in small to mid-sized organizations, and it is usually seen in on-premises deployments.</t>

<section anchor="single-tenant-resource-subscriber-rs"><name>Single-Tenant Resource Subscriber (RS)</name>
<t>Resource Subscriber (RS) in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-subscriber-that-is-the-scim-server"><name>Single-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the single-tenant RS.
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 9: Single-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-subscriber-that-is-the-scim-client"><name>Single-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
 A good example would be an on-premises application (most commonly a single-tenant application) that creates its own database of objects, such as devices, from a central IdM (Identity Management) system. This option is a good solution for situations where the RS (Resource Subscriber) is not reachable from the IdM.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
| RC/RU/RM |                                   |    RS    |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 10: Single-Tenant Resource Subscriber that is the SCIM 
      Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-subscriber"><name>Multi-Tenant Resource Subscriber</name>
<t>It only differs from the Single-Tenant Resource Subscriber (RS) by supporting multiple tenants. Typically, we see this in SaaS applications.</t>

<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-server"><name>Multi-Tenant Resource Subscriber that is the SCIM Server</name>
<t>It is the most common today for the SCIM Client, typically performing the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the multi-tenant RS (Resrouce Subscriber).
 A good example would be a SaaS application (most commonly a multi-tenant applications) that creates its own database of objects for its own use, obtaining the objects from a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                              Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client A |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client B |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Client C |                                  ||  Server  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 11: Multi-Tenant Resource Subscriber that is the SCIM 
      Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-subscriber-that-is-the-scim-client"><name>Multi-Tenant Resource Subscriber that is the SCIM Client</name>
<t>The SCIM Client, which is the RS (Resource Subscriber), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the IdM (Identity Management) system and is responsible for the roles of RM (Resource Manager), RC (Resource Creator), and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a SaaS application (most commonly a multi-tenant application) that creates its own database of objects for each of its tenants, using a central IdM (Identity Management) system.</t>

<figure><artwork><![CDATA[
                                             Provision Domain
                                              +------------+
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server A |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source A)|                                  ||(Tenant A)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server B |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source B)|                                  ||(Tenant B)||
+----------+                                  |+----------+|
+----------+                                  |+----------+|
|   SCIM   |                                  ||   SCIM   ||
| Server C |                                  ||  Client  ||
|          |                (1)               ||          ||
|          | -------------------------------->||          ||
| RC/RU/RM |                                  ||    RS    ||
|          |                                  ||          ||
|(Source C)|                                  ||(Tenant C)||
+----------+                                  |+----------+|
                                              +------------+

    Figure 12: Multi-Tenant Resource Subscriber that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-creator-rcru"><name>Resource Creator (RC/RU)</name>
<t>Single-tenant provisioning is done using a Resource Creator/Updater (RC/RU), which is responsible for creating the objects that will be passed across different systems. This is a very common and simple SCIM use case, where the SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are created. The CRUD operations on these resources trigger specific actions to facilitate the information exchange between two entities, typically the SCIM Client and Server.
It is the responsibility of the Resource Creator/Updater to pass all relevant SCIM Resource Object Attribute (SROA) for that specific RS/RM. Typically, we find this kind of use case in small to mid-sized organizations, mainly in on-premises systems, where there is no structured method to handle the resources.</t>

<section anchor="single-tenant-resource-creatorupdater-rcru"><name>Single-Tenant Resource Creator/Updater (RC/RU)</name>
<t>Resource Creator/Updater in a single tenant that can either be the SCIM Client or SCIM Server. Typically, we see this in an on-premise application.</t>

<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Single-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles RC (Resource Creator) and RU (Resource Updater) to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resrouce Manager) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from a single-tenant provision service to a Consumer.
A good example would be traditional on-premises HR (Human Resource) applications that creates SCIM Resource Object (SRO) either in central IdM (Identity Management) system or directly in a target aplications.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Client  |                                   |  Server  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 13: Single-Tenant Resource Creator/Updater that is the 
       SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Single-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a traditional HR on-premises application (most commonly a single-tenant application) that creates its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional SCIM Resource Object Attribute (SROA) to the SCIM Resource Object (SRO). This option is a good solution for situations where the RS (Resource Subscriber) or RM (Resource Manager) is not reachable from the HR application.</t>

<figure><artwork><![CDATA[
Provision Domain
+----------+                                   +----------+
|   SCIM   |                                   |   SCIM   |
|  Server  |                                   |  Client  |
|          |                (1)                |          |
|          | --------------------------------> |          |
|   RC/RU  |                                   |  RS/RM   |
|          |                                   |          |
| (Source) |                                   |(Consumer)|
+----------+                                   +----------+
    Figure 14: Single-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-creatorupdater-rcru"><name>Multi-Tenant Resource Creator/Updater (RC/RU)</name>
<t>It only differs from the Single-Tenant Resource Creator/Updater (RC/RU) by supporting multiple tenants. A typically would be an HR SaaS aplication.</t>

<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-client"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Client</name>
<t>It is common today for the SCIM Client, typically performing the roles of RC (Resource Creator) and RU (Resource Updater), to perform CRUD operations on the database of the RS (Resource Subscriber) or RM (Resource Manager) using the Active Push method. This action delivers SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from a multi-tenant provision service to a consumer.
A good example would be any new SaaS HR (Human Resources) application that creates SCIM Resource Object (SRO) either in a central IdM (Identity Management) system or directly in target applications.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 15: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="multi-tenant-resource-creatorupdater-that-is-the-scim-server"><name>Multi-Tenant Resource Creator/Updater that is the SCIM Server</name>
<t>The SCIM Client, which can be the RS (Resource Subscriber) or RM (Resource Manager), will perform CRUD operations on its own database using the Active and/or Delta Pull methods. Source information is available in the SCIM server, which is the source system responsible for the roles of RC (Resource Creator) and RU (Resource Updater) for the SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
A good example would be a SaaS HR (Human Resource) application (most commonly a multi-tenant application) that has its own database of objects and provides them to a SCIM client. The SCIM client can either be an RS (Resource Subscriber), typically a standalone application that requires object information from the HR application, or an RM (Resource Manager), such as an on-premises IdM that will consolidate and add additional SCIM Resource Object Attribute (SROA) to the SCIM Resource Object (SRO).</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||   RC/RU  ||                                   |   RS/RM    |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 16: Multi-Tenant Resource Creator/Updater that is the 
      SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
</section>
<section anchor="resource-management-rm"><name>Resource Management (RM)</name>
<t>Typically, one or more upstream object databases populate the Resource Manager (RM), which then provides that resource information to downstream services requiring specific sets of the populated objects.
The scenarios described in the next chapter will always outline the concept of upstream services, which are normally the sources of the objects, and downstream services, which are typically the consumers of the objects.
A single-tenant Resource Manager (RM) will receive SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) from an upstream entity, which can be either SCIM or non-SCIM. A good example of a non-SCIM upstream source would be connectors that synchronize users and groups using an HTTP REST interface to copy those objects from a database using legacy protocols like LDAP.
Normally, the Resource Manager (RM) will accept objects from multiple sources, and it is its responsibility to understand which SCIM Resource Object Attribute (SROA) to obtain from each source. There might also be independent agreements for different groups of SCIM Resource Object (SRO).
The Resource Manager (RM) can also assume the roles of Resource Creator (RC) and Resource Updater (RU), where some or all of the SCIM Resource Object (SRO) or some of their SCIM Resource Object Attribute (SROA) are created locally. These kinds of deployments are very common in greenfield deployments.</t>

<section anchor="single-tenant-resource-manager-rm"><name>Single-Tenant Resource Manager (RM)</name>
<t>Single-Tenant Resrouce Manager are tipically Identity Manager (IdM) that are on-premises, where the upStream is tipically also on-premise but the Downstream can iether be on-premise, Cloud or hybrid application.</t>

<section anchor="single-tenant-resource-manager-that-is-the-scim-server"><name>Single-Tenant Resource Manager that is the SCIM Server</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA). If the source is a SCIM Client, it will use the Active Push method to deliver that information to the Resource Manager, which will be the SCIM Server and the consumer of those Resource Objects. The same Resource Manager will act as a SCIM server for the downstream consumer, which will be the SCIM Client performing the actions of Active/Delta Push.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 17: Single-Tenant Resource Manager that is the SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Client</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA). If the source is a SCIM Server, the Resource Manager, which will act as a SCIM Client, will use the Active/Delta Pull method to obtain that information. The same Resource Manager will act as a SCIM Server for the downstream consumer and will perform the action of pushing a select group of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA) to the consumer service.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 18: Single-Tenant Resource Manager that is the SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="single-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Single-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>The upstream service will provide one or more sources of SCIM Resource Object (SRO) and their SCIM Resource Object Attribute (SROA).
This scenario we will use as SCIM action Active/Delta Pull from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM server and the final Consumer is the SCIM Client.
This scenarios we will use as SCIM action Active Push from the UpStream to the Resource Manager and the same action from it to the DownStream, for the scenarios where the initial Source is a SCIM Client and the final Consumer is the SCIM Server.
This is a partial implementation used by some IdM systems today, where they obtain Resource Objects from legacy databases using non-SCIM protocols and provide SCIM Resource Object (SRO) to downstream services, typically SaaS applications that need to create their own database of Resource Objects.</t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Server  |        ||  Client ||  Server  ||        |  Client |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 19: Single-Tenant Resource Manager that is the SCIM Client
      and SCIM Server
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

<figure><artwork><![CDATA[
                        Provision Domain
 UpStream           +-----------------------+        DownStream
+----------+        |+---------++----------+|        +---------+
|   SCIM   |        ||   SCIM  ||   SCIM   ||        |   SCIM  |
|  Client  |        ||  Server ||  Client  ||        |  Server |
|   RC/RU  |  (1)   ||  RS/RM  || RM/RC/RU ||        |         |  
|(Source A)|------->||         ||          ||        |         |         
+----------+        ||         ||          ||  (3)   |    RS   |
+----------+        ||  RC/RU  ||          ||------->|         |
|    Non   |        ||         ||          ||        |         |
|   SCIM   |  (2)   |!         !|          ||        |         |
|          |------->||(Consumer||          ||        |(Consumer|  
|(Source B)|        ||   A,B)  ||(Source Z)||        |     Z)  |
+----------+        |+---------++----------+|        +---------+
                    +-----------------------+ 
    Figure 20: Single-Tenant Resource Manager that is the SCIM Server 
      and SCIM Client
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>Non SCIM action</t>
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
<section anchor="multi-tenant-resource-manager-rm"><name>Multi-Tenant Resource Manager (RM)</name>
<t>Multi-Tenant Resource Manager are typically Identity Manager (IdM) that are cloud base, normally designated as IDaaS, where the upStream and Downstream are either on-premise or Cloud base.</t>

<section anchor="multi-tenant-resource-manager-that-is-the-scim-server"><name>Multi-Tenant Resource Manager that is the SCIM Server</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Client but the Provision domain has multiple Tenants</t>

</section>
<section anchor="multi-tenant-resource-manager-that-is-the-scim-server-and-scim-client"><name>Multi-Tenant Resource Manager that is the SCIM Server and SCIM Client</name>
<t>Same information as Single-Tenant Resource Manager that is the SCIM Server and SCIM Client but the Provision domain has multiple Tenants</t>

</section>
</section>
</section>
</section>
<section anchor="specific-implementations"><name>Specific Implementations</name>

<section anchor="partner-device-registry"><name>Partner Device Registry</name>
<t>An important step in making a device work is to provide its details from the manufacturer to the customer. The SCIM Resource Object (SRO) of the device, provided by the manufacturer, includes its SCIM Resource Object Attribute (SROA), such as certificates, pairing protocols, and other relevant details.</t>

<section anchor="manufacturer-details-provided-to-customer-by-vendor-that-is-the-scim-client"><name>Manufacturer details provided to customer by vendor that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM client and will push details of devices acquired by specific customers to their SCIM servers. The customer will provide the SCIM server and will receive information from the acquired devices. Additionally, the customer will manage the attributes of those devices, assuming the roles of Resource Subscriber (RS), Resource Updater (RU), and Resource Manager (RM). After the initial creation of the SCIM Resource Object (SRO) in the customer's device database, it will be the server's responsibility to add and update the SCIM Resource Object Attribute (SROA).
Typically, the device will reach out to a device manager in the customer's network, which will provide the SCIM server endpoint to the manufacturer. This task can also be done manually at the time of the device acquisition, allowing a SCIM push of the SCIM Resource Object (SRO) to the customer's device management platform.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Customer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Costumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Client  ||                                   |   Server   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Costumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 21: Manufactor is the SCIM client and push RO to Customers 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="manufacturer-details-provided-by-requesting-it-from-customer-that-is-the-scim-client"><name>Manufacturer details provided by requesting it from Customer that is the SCIM client</name>
<t>The manufacturer is the multi-tenant SCIM server that holds the details of the Resource Objects, which it can provide to customers who acquire them. The customer will provide a SCIM client that will perform an Active Pull of the Resource Objects acquired from a specific manufacturer.
The SCIM client will have the roles of Resource Subscriber (RS), Resource Manager (RM), and Resource Updater (RU), because after creating the SCIM Resource Object (SRO) in its object database, it will be responsible for updating and modifying that object.
This use case is especially interesting for customers whose Device Manager is not reachable from the Internet. In such cases, the Device Manager will act as a SCIM client and perform the action of pulling the SCIM Resource Object (SRO) from the multi-tenant SCIM server provided by the manufacturer.</t>

<figure><artwork><![CDATA[
Provision Domain
+------------+ 
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant A)||                                   |(Consumer A)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant B)||                                   |(Consumer B)|
|+----------+|                                   +------------+
|+----------+|                                   +------------+
||   SCIM   ||                                   |    SCIM    |
||  Server  ||                                   |   Client   |
||          ||                (1)                |            |
||          || --------------------------------> |            |
||    RC    ||                                   |  RS/RU/RM  |
||          ||                                   |            |
||(Tenant C)||                                   |(Consumer C)|
|+----------+|                                   +------------+
+------------+
    Figure 22: Manufactor is the SCIM Server and Customers Pull 
      information about Device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Pull</t>
</list></t>

</section>
</section>
<section anchor="device-identity-creation-from-commissioner-tool"><name>Device Identity Creation from Commissioner Tool</name>
<t>When devices are initially provisioned from the client application (mobile application, web application, etc.), the client application will allow for the provision of additional details about the devices that are specific to that installation.
Whether the commissioning tool is already SCIM-enabled or the client application includes the commissioning tool, there will ultimately be a SCIM action to perform an Active Push. This action will provide the additional SCIM Resource Object Attribute (SROA) to be added to the SCIM Resource Object (SRO) that is maintained in the device manager.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | <------------- | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                           Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS | <---------------------------- |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 23:  Commissioner tool provide Resource Attribtues to 
      Device Manager
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="client-applications-gets-directory-services"><name>Client Applications gets directory Services</name>
<t>The client application retrieves information about all devices and their attributes from the Device Manager for their environments. The client application typically downloads the full list of devices daily during non-working hours, with an optional on-demand sync. SCIM clients should only be able to access the devices that they manage.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |                |  SCIM client  | <------> | RA |
|  SCIM  |     (1)        | +----+ +----+ |          +----+
| Server | -------------> | | RA | | RA | |    (2)   +----+
|        |                | +----+ +----+ | <------> | RA |
|        |                +---------------+          +----+
|        |                         Client App + Comissioner Tool
|        |                               +--------+
|  RC/RU |               (1)             |   RA   |
|  RM/RS |  ---------------------------> |  SCIM  |
|        |                               | Client |
+--------+                               +--------+
    Figure 24: Device manager provides RO and RA to the Devices 
      through Commissioner Tool
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Pull</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="provide-credetials-to-manage-device"><name>Provide Credetials to manage Device</name>
<t>The Device Manager can provide Resource Attributes to the client application so that the devices can be configured using the commissioning tool. For example, the Device Manager can provide credentials to the device using the client application as the gateway. Through the commissioning tool, which can be a single entity, these credentials can be delivered to the device.</t>

<figure><artwork><![CDATA[
Device Manager                Client App        Commissioner Tool
+--------+                +---------------+    (2)   +----+
|        |     (1)        |               | <------> | RA |
|  SCIM  | -------------> |  SCIM Server  |          +----+
| Client |                |               |    (2)   +----+
|        |                |      RS       | <------> | RA |
+--------+                +---------------+          +----+
    Figure 25:  Device Manager provide Resource Attributes to the 
      Commissioner tool to configure device
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM client performs Active Push</t>
  <t>Non SCIM action</t>
</list></t>

</section>
<section anchor="enterprise-last-mile-applications"><name>Enterprise "Last Mile" Applications</name>
<t>When provisioning to line of business Enterprise applications, implementers are often dealing with software that cannot be easily modified. As a result, it may be necessary to perform system integrations that run at the application layer, the database layer, or the framework layer in order to insert or change user data sourced from SCIM infrastructure. Connectors often use a client active pull over a periodic interval to keep the application in sync. It is also common for this pattern to include a just-in-time SSO trigger, so that should a new user try to access the line of business application before the resource has been created by the periodic active pull, they are created instead based on the contents of the user's SAML assertion and then managed going forward by SCIM active pulls.</t>

</section>
<section anchor="ra-authority-in-saas-application"><name>RA authority in SaaS Application</name>
<t>Sometimes, not all the SCIM Resource Object Attribute (SROA) of a SCIM Resource Object (SRO) are owned (created) by the Resource Creator (RC) or Resource Updater (RU). Very specialized SCIM Resource Object Attribute (SROA) can be the responsibility of a SaaS application. For example, an IdM should create user records with standard attributes like first name, last name, home address, etc., but the SaaS application should define the email attribute if that SaaS application is an email server.</t>

<section anchor="implementers-provision-domain-is-a-scim-client-and-a-scim-server"><name>Implementers Provision Domain is a SCIM Client and a SCIM server</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific SCIM Resource Object Attribute (SROA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
Both the Provision Domain and the application will function as both the SCIM Client and SCIM Server for the respective SCIM Resource Object Attribute (SROA) they are responsible for. They will use the SCIM action of Active Push to pass the RSCIM Resource Object Attribute (SROA) of the SCIM Resource Object (SRO) to their counterpart.
Thus, both the roles of SCIM Server and SCIM Client exist within the Provision Domain and the application.</t>

<figure><artwork><![CDATA[
                                                 Application
Provision Domain                                  Customer A
+------------+                                  +------------+ 
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Client  ||                                  ||  Server  ||
||          ||                (1)               ||          ||
||          || -------------------------------> ||          ||
|| RM/RC/RU ||                                  ||    RS    ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
|+----------+|                                  |+----------+|
||   SCIM   ||                                  ||   SCIM   ||
||  Server  ||                                  ||  Client  ||
||          ||                (1)               ||          ||
||          || <------------------------------- ||          ||
||    RS    ||                                  || RM/RC/RU ||
||          ||                                  ||          ||
||          ||                                  ||          ||
|+----------+|                                  |+----------+|
+------------+                                  +------------+
    Figure 26: Single Ro with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
<section anchor="implementers-provision-domain-is-a-scim-client"><name>Implementers Provision Domain is a SCIM Client</name>
<t>The implementer's domain acts as the SCIM Client and is the authority for regular attributes, such as first name, last name, home address, etc., of a user. These attributes are created and updated by the Provision Domain, which functions as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU).
The application is the authority for one or more specific SCIM Resource Object Attribute (SROA), such as the email address of a given user. This means the application will serve as the Resource Manager (RM), Resource Creator (RC), and Resource Updater (RU) for those specific attributes only.
In this use case, since the Provision Domain is always the SCIM Client and the application is always the SCIM Server, the Active Push method will be used for the regular attributes of the SCIM Resource Object (SRO). The Active/Delta Pull method will be used to retrieve the specialized SCIM Resource Object Attribute (SROA) that are the responsibility of the application.</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |                                  |          |
|          |               (2)                |          |
| RM/RC/RU | <------------------------------- |    RS    |
|          |                                  |          |
+----------+                                  +----------+
    Figure 27: Single RO with diferent RA authority implemented 
      between the Provision Domain and the customer SaaS App 
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
</list></t>

</section>
</section>
<section anchor="reconciliations"><name>Reconciliations</name>
<t>Because of inconsistencies or mistakes in the SaaS App Resource Objects and it attributes might change and there is no visibility of the IdM that it happens.
System will do reconciliation to make sure that SCIM Resource Object (SRO) and its SCIM Resource Object Attribute (SROA) are consistent across different systems.
If there is a new attributes from SCIM Server in the Delta Pull, the SCIM client will do a push to fix it and make again synchronize</t>

<figure><artwork><![CDATA[
                                              Application
Provision Domain                               Customer A
+----------+                                  +----------+
|   SCIM   |               (1)                |   SCIM   |
|  Client  | -------------------------------> |  Server  |
|          |               (2)                |          |
|          | <------------------------------- |          |
| RM/RC/RU |               (3)                |    RS    |
|          | -------------------------------> |          |
+----------+                                  +----------+
    Figure 28: Reconciliation of RO/RA between IDM and Application
]]></artwork></figure>

<t><list style="numbers" type="1">
  <t>Regular SCIM action - SCIM Client performs Active Push</t>
  <t>SCIM action - SCIM Client performs Active/Delta Pull</t>
  <t>Remediation SCIM action - SCIM Client performs Active Push</t>
</list></t>

</section>
</section>
</section>
<section anchor="security-considerations"><name>Security Considerations</name>
<t>Authentication and authorization must be ensured for SCIM operations to guarantee that only authenticated entities can perform SCIM requests and that the requested SCIM operations are authorized.
SCIM resources (e.g., Users and Groups) can contain sensitive information. Therefore, data confidentiality must be ensured at the transport layer.
There can be privacy issues that extend beyond transport security, such as moving personally identifiable information (PII) offshore between different SCIM elements. Regulatory requirements must be met when migrating identity information between different jurisdictions (e.g., countries and states may have differing privacy regulations).
Additionally, privacy-sensitive data elements may be omitted or obscured in SCIM transactions or stored records to protect these data elements for a user. For instance, a role-based identifier might be used instead of an individual's name.
Detailed security considerations are specified in Section 7 of the SCIM protocol <xref target="RFC7644"></xref> and Section 9 of the SCIM schema <xref target="RFC7643"></xref>.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>
<t>There are no additional IANA considerations to those specified <xref target="RFC7643"></xref> and <xref target="RFC7644"></xref>.</t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>
<t>The editor would like to acknowledge the contribution to this draft versions of this document:
      Dean Saxe, Beyond Identity
      Eliot Lear, Cisco Systems</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>



    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7643">
  <front>
    <title>System for Cross-domain Identity Management: Core Schema</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specifications are designed to make identity management in cloud-based applications and services easier. The specification suite builds upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. Its intent is to reduce the cost and complexity of user management operations by providing a common user schema and extension model as well as binding documents to provide patterns for exchanging this schema using HTTP.</t>
      <t>This document provides a platform-neutral schema and extension model for representing users and groups and other resource types in JSON format. This schema is intended for exchange and use with cloud service providers.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7643"/>
  <seriesInfo name="DOI" value="10.17487/RFC7643"/>
</reference>
<reference anchor="RFC7644">
  <front>
    <title>System for Cross-domain Identity Management: Protocol</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="K. Grizzle" initials="K." surname="Grizzle"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="C. Mortimore" initials="C." surname="Mortimore"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>The System for Cross-domain Identity Management (SCIM) specification is an HTTP-based protocol that makes managing identities in multi-domain scenarios easier to support via a standardized service. Examples include, but are not limited to, enterprise-to-cloud service providers and inter-cloud scenarios. The specification suite seeks to build upon experience with existing schemas and deployments, placing specific emphasis on simplicity of development and integration, while applying existing authentication, authorization, and privacy models. SCIM's intent is to reduce the cost and complexity of user management operations by providing a common user schema, an extension model, and a service protocol defined by this document.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7644"/>
  <seriesInfo name="DOI" value="10.17487/RFC7644"/>
</reference>
<reference anchor="RFC9110">
  <front>
    <title>HTTP Semantics</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document describes the overall architecture of HTTP, establishes common terminology, and defines aspects of the protocol that are shared by all versions. In this definition are core protocol elements, extensibility mechanisms, and the "http" and "https" Uniform Resource Identifier (URI) schemes.</t>
      <t>This document updates RFC 3864 and obsoletes RFCs 2818, 7231, 7232, 7233, 7235, 7538, 7615, 7694, and portions of 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="97"/>
  <seriesInfo name="RFC" value="9110"/>
  <seriesInfo name="DOI" value="10.17487/RFC9110"/>
</reference>
<reference anchor="RFC9112">
  <front>
    <title>HTTP/1.1</title>
    <author fullname="R. Fielding" initials="R." role="editor" surname="Fielding"/>
    <author fullname="M. Nottingham" initials="M." role="editor" surname="Nottingham"/>
    <author fullname="J. Reschke" initials="J." role="editor" surname="Reschke"/>
    <date month="June" year="2022"/>
    <abstract>
      <t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems. This document specifies the HTTP/1.1 message syntax, message parsing, connection management, and related security concerns.</t>
      <t>This document obsoletes portions of RFC 7230.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="99"/>
  <seriesInfo name="RFC" value="9112"/>
  <seriesInfo name="DOI" value="10.17487/RFC9112"/>
</reference>
<reference anchor="RFC8417">
  <front>
    <title>Security Event Token (SET)</title>
    <author fullname="P. Hunt" initials="P." role="editor" surname="Hunt"/>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="W. Denniss" initials="W." surname="Denniss"/>
    <author fullname="M. Ansari" initials="M." surname="Ansari"/>
    <date month="July" year="2018"/>
    <abstract>
      <t>This specification defines the Security Event Token (SET) data structure. A SET describes statements of fact from the perspective of an issuer about a subject. These statements of fact represent an event that occurred directly to or about a security subject, for example, a statement about the issuance or revocation of a token on behalf of a subject. This specification is intended to enable representing security- and identity-related events. A SET is a JSON Web Token (JWT), which can be optionally signed and/or encrypted. SETs can be distributed via protocols such as HTTP.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8417"/>
  <seriesInfo name="DOI" value="10.17487/RFC8417"/>
</reference>
<reference anchor="RFC7832">
  <front>
    <title>Application Bridging for Federated Access Beyond Web (ABFAB) Use Cases</title>
    <author fullname="R. Smith" initials="R." role="editor" surname="Smith"/>
    <date month="May" year="2016"/>
    <abstract>
      <t>Federated identity is typically associated with web-based services at present, but there is growing interest in its application in non-web-based contexts. The goal of this memo is to document a selection of the wide variety of these contexts whose user experience could be improved through the use of technologies based on the Application Bridging for Federated Access Beyond web (ABFAB) architecture and specifications.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7832"/>
  <seriesInfo name="DOI" value="10.17487/RFC7832"/>
</reference>

<reference anchor="SCIM Profile for Security Event Tokens" target="https://datatracker.ietf.org/doc/draft-ietf-scim-events">
  <front>
    <title>SCIM Profile for Security Event Tokens</title>
    <author initials="P." surname="Hunt" fullname="P. Hunt">
      <organization></organization>
    </author>
    <author initials="N." surname="Cam-Winget" fullname="N. Cam-Winget">
      <organization></organization>
    </author>
    <author initials="M." surname="Kiser" fullname="M. Kiser">
      <organization></organization>
    </author>
    <author initials="J." surname="Schreiber" fullname="J. Schreiber">
      <organization></organization>
    </author>
    <date year="2025" month="June"/>
  </front>
</reference>


    </references>

</references>


<?line 1005?>



  </back>

<!-- ##markdown-source:
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
oBM6Z889hCE3xfN6Ph14zq5C4K2X+8yg94wkxh/Odnw+JYTNyQSPw+l+L59c
UM01fXqP8bg/nr8PM/Rk6pli1xpxTOIsY+IBx5eBWz+AKYdKojdt7hsg9tu4
3SAPH/bwzg4n6PBHlwnxAuN2rzDwhMwSCrNSh6n2AuwzlAGUSQ5DJzXA5Spv
5Rokx02nUuTHkDK5kLsfTNSnw9YjPtYVGh8czMFJOKpV2GeamVFVEwKyHVjv
VlnswCka7BqqG+mBTpfl1W9DYmz22/W+vCcC5EFi0BsfRWI8+fqDRIZn2e8n
Mh4nfDaYJFfgN9g2GNLakVuQoyTFFu5lz+B9AOQ+yXAKxHPMNnukXR3CJHbI
zpHvMkNsK3/twR75GPYIbnc0R3CoWjX5ULdKs26NkI4UyzpJ6eVzNU56ZM1h
77frZB7Gwd6lj+8AK/a8nT6ehqBG+74dRNvBwupd+vjB0qr79iHi6l0qrg6W
V52+nbxio9O93j5xrHB0+u5gidXe70+CWp4/UMuut5O+PbU8P4xanv9WqOXi
gVp2vZ307anl4jBqubgHatn9Rvppy7FcnX5y/h5q4D06YNiHqKNem3/wv3ye
/pePobAeqK9S1HaGzzlzKkLbfnX/+Yed7H+sFHFSYW8NNXhTHqTIP6GG6qhl
bw31gVr+mTVURy17a6gP1PLb0VCfvo+Geu9+3t5L4h7jpWmTLACUFollWFm9
FkGh2FUVLNEAt145l+V6h1o8VA7WQ/cCJs9dKv6pYbc+D6hWdHRnd1mGjIiN
OwpeaG4MFvbVohK3vN5w+1ZnkUjX5jYpKjN5PL5qu/k/FIYFKieVkUxjnY5a
kt2nJMoaajDqBkGapbNy8J5rXpeV8CtEW7YTr7WB/BPcVvuJTxi31dn5Tczo
nrBbvbbbFtPtHuMhgDu9SgIQ3qD8BwdKfMGlfkYc8lOxCqIPSm4xP63mIYM2
PRo/jNnJD80SqjS4EfVd0Oktzy3zcwQL4PI9LUxYeSoVSic2XA7L++7K+8TC
7J8nMMtVht572MijfzNh9m82htm3sbug+d2DEtZ2D74v9/VOyg1OQlf6bk+2
1/ajfdoeRDdcx0K2+wkPFCq/sj8wZclwZfKvibmFeYTb2fEuXRQkSR2QbmGQ
XC0BibHRCZ3e5UFVriswGTo3esS77Gn9snIbHk/ywzi/8QKqRNSbiDe5SCdd
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
ih3MwCgBAA==

-->

</rfc>

